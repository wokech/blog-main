[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About Me",
    "section": "",
    "text": "Publications\n\n\nEducation\n\n\nEmployment History"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "William Okech",
    "section": "",
    "text": "I am a research scientist from Kenya interested in data visualization (R/RStudio) and developing interactive dashboards (Shiny). This blog aims to introduce readers to the basics of data analysis and visualization."
  },
  {
    "objectID": "posts/blog_post_1/index.html",
    "href": "posts/blog_post_1/index.html",
    "title": "A Beginner’s Guide to R and RStudio",
    "section": "",
    "text": "Footnotes\n\n\nSummary of the benefits of R and RStudio obtained from Lander, J. P. (2017). R for everyone: Advanced analytics and graphics. Addison-Wesley.↩︎"
  },
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "Blog posts",
    "section": "",
    "text": "All Blog Posts\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\n\nKenya Census Insights (Demographics)\n\n\nAre there more men than women in Kenya?\n\n\n\n\nRStudio\n\n\nR\n\n\nData Stories\n\n\nBlog\n\n\nKenya Census\n\n\n\n\n\n\n\n\n\n\n\nJun 30, 2022\n\n\n4 min\n\n\n\n\n\n\n\n\nThe Basics of R and RStudio\n\n\nPart 3: Data Types\n\n\n\n\nRStudio\n\n\nR\n\n\nTutorial\n\n\nBlog\n\n\n\n\n\n\n\n\n\n\n\nJun 23, 2022\n\n\n6 min\n\n\n\n\n\n\n\n\nThe Basics of R and RStudio\n\n\nPart 2: Variables\n\n\n\n\nRStudio\n\n\nR\n\n\nTutorial\n\n\nBlog\n\n\n\n\n\n\n\n\n\n\n\nJun 22, 2022\n\n\n1 min\n\n\n\n\n\n\n\n\nThe Basics of R and RStudio\n\n\nPart 1: Simple Arithmetic\n\n\n\n\nRStudio\n\n\nR\n\n\nTutorial\n\n\nBlog\n\n\n\n\n\n\n\n\n\n\n\nJun 15, 2022\n\n\n2 min\n\n\n\n\n\n\n\n\nGetting Started with R and RStudio\n\n\nSoftware Installation\n\n\n\n\nRStudio\n\n\nR\n\n\nTutorial\n\n\nBlog\n\n\n\n\n\n\n\n\n\n\n\nJun 8, 2022\n\n\n3 min\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/series_1/new_post_1/post_1.html",
    "href": "posts/series_1/new_post_1/post_1.html",
    "title": "Getting Started with R and RStudio",
    "section": "",
    "text": "Footnotes\n\n\nSummary of the benefits of R and RStudio obtained from Lander, J. P. (2017). R for everyone: Advanced analytics and graphics. Addison-Wesley.↩︎"
  },
  {
    "objectID": "posts/series_1/new_post_1/post_1.html#what-arithmetic-operators-are-used-in-r",
    "href": "posts/series_1/new_post_1/post_1.html#what-arithmetic-operators-are-used-in-r",
    "title": "The Basics of R and RStudio",
    "section": "What arithmetic operators are used in R?",
    "text": "What arithmetic operators are used in R?\nVarious arithmetic operators can be used in R. These operators include:\n\n\n\nArithmetic Operator\nDescription\n\n\n\n\n+\nAddition\n\n\n-\nSubtraction\n\n\n*\nMultiplication\n\n\n/\nDivision\n\n\n** or ^\nExponentiation\n\n\n%%\nModulus (remainder after division)\n\n\n%/%\nInteger division"
  },
  {
    "objectID": "posts/series_1/new_post_1/post_1.html#examples",
    "href": "posts/series_1/new_post_1/post_1.html#examples",
    "title": "The Basics of R and RStudio",
    "section": "Examples",
    "text": "Examples\nAddition\n\n10+30\n\n[1] 40\n\n\nSubtraction\n\n30-24\n\n[1] 6\n\n\nMultiplication\n\n20*4\n\n[1] 80\n\n\nDivision\n\n93/4\n\n[1] 23.25\n\n\nExponentiation\n\n3^6\n\n[1] 729\n\n\nModulus (remainder with division)\n\n94%%5\n\n[1] 4\n\n\nInteger Division\n\n54%/%7\n\n[1] 7\n\n\nSlightly more complex arithmetic operations\n\n5-1+(4*3)/16*3\n\n[1] 6.25"
  },
  {
    "objectID": "posts/series_1/new_post_1/post_1.html#summary",
    "href": "posts/series_1/new_post_1/post_1.html#summary",
    "title": "The Basics of R and RStudio",
    "section": "Summary",
    "text": "Summary\nAfter going through this post, I hope that you can now perform simple arithmetic calculations in R."
  },
  {
    "objectID": "series_1.html",
    "href": "series_1.html",
    "title": "R and RStudio: Getting Started and The Basics",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\n\n\nSoftware Installation\n\n\n\n\nRStudio\n\n\nR\n\n\nTutorial\n\n\nBlog\n\n\n\n\n\n\n\n\n\n\n\nJun 8, 2022\n\n\n3 min\n\n\n\n\n\n\n\n\n\nPart 1: Simple Arithmetic\n\n\n\n\nRStudio\n\n\nR\n\n\nTutorial\n\n\nBlog\n\n\n\n\n\n\n\n\n\n\n\nJun 15, 2022\n\n\n2 min\n\n\n\n\n\n\n\n\n\nPart 2: Variables\n\n\n\n\nRStudio\n\n\nR\n\n\nTutorial\n\n\nBlog\n\n\n\n\n\n\n\n\n\n\n\nJun 22, 2022\n\n\n1 min\n\n\n\n\n\n\n\n\n\nPart 3: Data Types\n\n\n\n\nRStudio\n\n\nR\n\n\nTutorial\n\n\nBlog\n\n\n\n\n\n\n\n\n\n\n\nJun 23, 2022\n\n\n6 min\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/series_1/new_post_2/post_2.html",
    "href": "posts/series_1/new_post_2/post_2.html",
    "title": "The Basics of R and RStudio",
    "section": "",
    "text": "This is the first in a series of blog posts looking at the basics of R and RStudio. These programs allow us to perform various basic and complex calculations.\nTo get started, first, we will open R or RStudio. In R, go to the console, and in RStudio, head to the console pane. Next, type in a basic arithmetic calculation such as “1 + 1” after the angle bracket (>) and hit “Enter.”\nAn example of a basic calculation:\n\n1+1\n\n[1] 2\n\n\nThe output will be observed next to the square bracket containing the number 1 ([1]).\n\n\n\n\n\nAdditionally, to include comments into the code block we use the hash (#) symbol. Anything written after the code block will be commented out and not run.\n\n# A simple arithmetic calculation (which is not run because of the hash symbol)\n1+1\n\n[1] 2"
  },
  {
    "objectID": "posts/series_1/new_post_3/post_3.html",
    "href": "posts/series_1/new_post_3/post_3.html",
    "title": "The Basics of R and RStudio",
    "section": "",
    "text": "Variables are instrumental in programming because they are used as “containers” to store data values. To assign a value to a variable, we can use <− or =. However, most R users prefer to use <−.\nExamples of variable assignment\n\nUsing <-\n\n\nvariable_1 <- 5\nvariable_1\n\n[1] 5\n\n\n\nUsing =\n\n\nvariable_2 = 10\nvariable_2\n\n[1] 10\n\n\n\nReverse the value and variable with ->\n\n\n15 -> variable_3\nvariable_3\n\n[1] 15\n\n\n\nAssign two variables to one value\n\n\nvariable_4 <- variable_5 <- 30\nvariable_4\n\n[1] 30\n\nvariable_5\n\n[1] 30\n\n\nThe output of the variable can then be obtained by:\n\nTyping the variable name and then pressing “Enter,”\nTyping “print” with the variable name in brackets, print(variable), and\nTyping “View” with the variable name in brackets, View(variable).\n\nBoth print() and View() are some of the many built-in functions1 available in R.\nIn RStudio, the list of variables that have been loaded can be viewed in the environment pane.\n\n\n\n\n\nA screenshot of the environment pane with the stored variables.\n\nprint(variable_1)\n\n[1] 5\n\n\n\nView(variable_2)\n\nOutput of View() will be seen in the script pane"
  },
  {
    "objectID": "posts/series_1/new_post_3/post_3.html#the-assign-and-rm-functions",
    "href": "posts/series_1/new_post_3/post_3.html#the-assign-and-rm-functions",
    "title": "The Basics of R and RStudio",
    "section": "The assign() and rm() functions",
    "text": "The assign() and rm() functions\nIn addition to using the assignment operators (<- and =), we can use the assign() function to assign a value to a variable.\n\nassign(\"variable_6\", 555)\nvariable_6\n\n[1] 555\n\n\nTo remove the assignment of the value to the variable, either delete the variable in the “environment pane” or use the rm() function.\n\nvariable_7 <- 159\n\n\nrm(variable_7)\n\nAfter running rm() look at the environment pane to confirm whether variable_7 has been removed."
  },
  {
    "objectID": "posts/series_1/new_post_2/post_2.html#what-arithmetic-operators-are-used-in-r",
    "href": "posts/series_1/new_post_2/post_2.html#what-arithmetic-operators-are-used-in-r",
    "title": "The Basics of R and RStudio",
    "section": "What arithmetic operators are used in R?",
    "text": "What arithmetic operators are used in R?\nVarious arithmetic operators can be used in R. These operators include:\n\n\n\nArithmetic Operator\nDescription\n\n\n\n\n+\nAddition\n\n\n-\nSubtraction\n\n\n*\nMultiplication\n\n\n/\nDivision\n\n\n** or ^\nExponentiation\n\n\n%%\nModulus (remainder after division)\n\n\n%/%\nInteger division"
  },
  {
    "objectID": "posts/series_1/new_post_2/post_2.html#examples",
    "href": "posts/series_1/new_post_2/post_2.html#examples",
    "title": "The Basics of R and RStudio",
    "section": "Examples",
    "text": "Examples\nAddition\n\n10+30\n\n[1] 40\n\n\nSubtraction\n\n30-24\n\n[1] 6\n\n\nMultiplication\n\n20*4\n\n[1] 80\n\n\nDivision\n\n93/4\n\n[1] 23.25\n\n\nExponentiation\n\n3^6\n\n[1] 729\n\n\nModulus (remainder with division)\n\n94%%5\n\n[1] 4\n\n\nInteger Division\n\n54%/%7\n\n[1] 7\n\n\nSlightly more complex arithmetic operations\n\n5-1+(4*3)/16*3\n\n[1] 6.25"
  },
  {
    "objectID": "posts/series_1/new_post_2/post_2.html#summary",
    "href": "posts/series_1/new_post_2/post_2.html#summary",
    "title": "The Basics of R and RStudio",
    "section": "Summary",
    "text": "Summary\nAfter going through this post, I hope that you can now perform simple arithmetic calculations in R/RStudio."
  },
  {
    "objectID": "posts/series_1/new_post_3/post_3.html#naming-variables",
    "href": "posts/series_1/new_post_3/post_3.html#naming-variables",
    "title": "The Basics of R and RStudio",
    "section": "Naming variables",
    "text": "Naming variables\nAt this point, you may be wondering what conventions are used for naming variables. First, variables need to have meaningful names such as current_temp, time_24_hr, or weight_lbs. However, we need to be mindful of the variable style guide which provides us with the appropriate rules for naming variables.\nSome rules to keep in mind are:\n\nR is case-sensitive (variable is not the same as Variable),\nNames similar to typical outputs or functions (TRUE, FALSE, if, or else) cannot be used,\nAppropriate variable names can contain letters, numbers, dots, and underscores. However, you cannot start with an underscore, number, or dot followed by a number.\n\nExamples of valid and invalid names\nValid names = time_24_hr / .time24_hr\nInvalid names = _24_hr.time / 24_hr_time / .24_hr_time"
  },
  {
    "objectID": "posts/series_1/new_post_3/post_3.html#examples-of-valid-and-invalid-names",
    "href": "posts/series_1/new_post_3/post_3.html#examples-of-valid-and-invalid-names",
    "title": "The Basics of R and RStudio",
    "section": "Examples of valid and invalid names",
    "text": "Examples of valid and invalid names\nValid names\n\ntime_24_hr\n.time24_hr\n\nInvalid names\n\n_24_hr.time\n24_hr_time\n.24_hr_time"
  },
  {
    "objectID": "posts/series_1/new_post_4/post_4.html",
    "href": "posts/series_1/new_post_4/post_4.html",
    "title": "The Basics of R and RStudio",
    "section": "",
    "text": "R and RStudio utilize very many data types to store different kinds of data. The most common data types in R are listed below.\n\n\n\n\n\n\n\nData Type\nDescription\n\n\n\n\nNumeric\nThe most common data type. The values can be numbers or decimals (all real numbers).\n\n\nInteger\nSpecial case of numeric data without decimals.\n\n\nLogical\nBoolean data type with only 2 values (TRUE or FALSE).\n\n\nComplex\nSpecifies imaginary values in R.\n\n\nCharacter\nAssigns a character or string to a variable. The character variables are enclosed in single quotes (‘character’) while the string variables are enclosed in double quotes (“string”).\n\n\nFactor\nSpecial type of character variable that represents a categorical such as gender.\n\n\nRaw\nSpecifies values as raw bytes. It uses built-in functions to convert between raw and character (charToRaw() or rawToChar()).\n\n\nDates\nSpecifies the date variable. Date stores a date and POSIXct stores a date and time. The output is indicated as the number of days (Date) or number of seconds (POSIXct) since 01/01/1970."
  },
  {
    "objectID": "posts/series_1/new_post_4/post_4.html#data-type-examples",
    "href": "posts/series_1/new_post_4/post_4.html#data-type-examples",
    "title": "The Basics of R and RStudio",
    "section": "Data Type Examples",
    "text": "Data Type Examples\nNumeric\n\n89.98\n\n[1] 89.98\n\n55\n\n[1] 55\n\n\nInteger\n\n5L\n\n[1] 5\n\n5768L\n\n[1] 5768\n\n\nLogical\n\nTRUE\n\n[1] TRUE\n\nFALSE\n\n[1] FALSE\n\n\nComplex\n\n10 + 30i\n\n[1] 10+30i\n\n287 + 34i\n\n[1] 287+34i\n\n\nCharacter or String\n\n'abc'\n\n[1] \"abc\"\n\n\"def\"\n\n[1] \"def\"\n\n\"I like learning R\"\n\n[1] \"I like learning R\"\n\n\nDates\n\n\"2022-06-23 14:39:21 EAT\"\n\n[1] \"2022-06-23 14:39:21 EAT\"\n\n\"2022-06-23\"\n\n[1] \"2022-06-23\""
  },
  {
    "objectID": "posts/series_1/new_post_4/post_4.html#examining-data-types",
    "href": "posts/series_1/new_post_4/post_4.html#examining-data-types",
    "title": "The Basics of R and RStudio",
    "section": "Examining data types",
    "text": "Examining data types\nSeveral functions exist to examine the features of the various data types. These include:\n\ntypeof() – what is the data type of the object (low-level)?\nclass() – what is the data type of the object (high-level)?\nlength() – how long is the object?\nattributes() – any metadata available?\n\nLet’s look at how these functions work with a few examples\n\na <- 45.84\nb <- 858L\nc <- TRUE\nd <- 89 + 34i\ne <- 'abc'\n\nExamine the data type at a low-level with typeof()\n\ntypeof(a)\n\n[1] \"double\"\n\ntypeof(b)\n\n[1] \"integer\"\n\ntypeof(c)\n\n[1] \"logical\"\n\ntypeof(d)\n\n[1] \"complex\"\n\ntypeof(e)\n\n[1] \"character\"\n\n\nExamine the data type at a high-level with class()\n\nclass(a)\n\n[1] \"numeric\"\n\nclass(b)\n\n[1] \"integer\"\n\nclass(c)\n\n[1] \"logical\"\n\nclass(d)\n\n[1] \"complex\"\n\nclass(e)\n\n[1] \"character\"\n\n\nTo test whether the variable is of a specific type, we can use the “is.___()” functions.\nFirst, we test the variable a which is numeric.\n\nis.numeric(a)\n\n[1] TRUE\n\nis.integer(a)\n\n[1] FALSE\n\nis.logical(a)\n\n[1] FALSE\n\nis.character(a)\n\n[1] FALSE\n\n\nSecond, we test the variable c which is logical.\n\nis.numeric(c)\n\n[1] FALSE\n\nis.integer(c)\n\n[1] FALSE\n\nis.logical(c)\n\n[1] TRUE\n\nis.character(c)\n\n[1] FALSE\n\n\nTo convert between data types we can use the “as.___()” functions. These include: as.Date(), as.numeric(), and as.factor(). Additionally, other helpful functions include factor() which adds levels to the data and nchar() which provides the length of the data.\nExamples\n\nas.integer(a)\n\n[1] 45\n\nas.logical(0)\n\n[1] FALSE\n\nas.logical(1)\n\n[1] TRUE\n\nnchar(e)\n\n[1] 3"
  },
  {
    "objectID": "posts/series_1/new_post_2/post_2.html#what-arithmetic-operators-are-available-in-rrstudio",
    "href": "posts/series_1/new_post_2/post_2.html#what-arithmetic-operators-are-available-in-rrstudio",
    "title": "The Basics of R and RStudio",
    "section": "What arithmetic operators are available in R/RStudio?",
    "text": "What arithmetic operators are available in R/RStudio?\nVarious arithmetic operators (listed below) can be used in R/RStudio.\n\n\n\nArithmetic Operator\nDescription\n\n\n\n\n+\nAddition\n\n\n-\nSubtraction\n\n\n*\nMultiplication\n\n\n/\nDivision\n\n\n** or ^\nExponentiation\n\n\n%%\nModulus (remainder after division)\n\n\n%/%\nInteger division"
  },
  {
    "objectID": "posts/series_1/new_post_3/post_3.html#summary",
    "href": "posts/series_1/new_post_3/post_3.html#summary",
    "title": "The Basics of R and RStudio",
    "section": "Summary",
    "text": "Summary\nOverall, variables are very useful for programming in R/RStudio. These variables need to be named appropriately according to accepted conventions."
  },
  {
    "objectID": "series_2.html",
    "href": "series_2.html",
    "title": "Data Stories: Insights from the Kenya Census (2019)",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\n\n\nAre there more men than women in Kenya?\n\n\n\n\nRStudio\n\n\nR\n\n\nData Stories\n\n\nBlog\n\n\nKenya Census\n\n\n\n\n\n\n\n\n\n\n\nJun 30, 2022\n\n\n4 min\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/series_1/new_post_4/post_4.html#summary",
    "href": "posts/series_1/new_post_4/post_4.html#summary",
    "title": "The Basics of R and RStudio",
    "section": "Summary",
    "text": "Summary"
  },
  {
    "objectID": "posts/series_1/new_post_2/post_2.html#introduction",
    "href": "posts/series_1/new_post_2/post_2.html#introduction",
    "title": "The Basics of R and RStudio",
    "section": "Introduction",
    "text": "Introduction\nThis is the first in a series of blog posts looking at the basics of R and RStudio. These programs allow us to perform various basic and complex calculations. To get started, first, we will open R or RStudio. In R, go to the console, and in RStudio, head to the console pane. Next, type in a basic arithmetic calculation such as “1 + 1” after the angle bracket (>) and hit “Enter.”\nAn example of a basic calculation:\n\n1+1\n\n[1] 2\n\n\nThe output will be observed next to the square bracket containing the number 1 ([1])."
  },
  {
    "objectID": "posts/series_1/new_post_3/post_3.html#introduction",
    "href": "posts/series_1/new_post_3/post_3.html#introduction",
    "title": "The Basics of R and RStudio",
    "section": "Introduction",
    "text": "Introduction\nVariables are instrumental in programming because they are used as “containers” to store data values. To assign a value to a variable, we can use <− or =. However, most R users prefer to use <−.\nExamples of variable assignment\n\nUsing <-\n\n\nvariable_1 <- 5\nvariable_1\n\n[1] 5\n\n\n\nUsing =\n\n\nvariable_2 = 10\nvariable_2\n\n[1] 10\n\n\n\nReverse the value and variable with ->\n\n\n15 -> variable_3\nvariable_3\n\n[1] 15\n\n\n\nAssign two variables to one value\n\n\nvariable_4 <- variable_5 <- 30\nvariable_4\n\n[1] 30\n\nvariable_5\n\n[1] 30\n\n\nThe output of the variable can then be obtained by:\n\nTyping the variable name and then pressing “Enter,”\nTyping “print” with the variable name in brackets, print(variable), and\nTyping “View” with the variable name in brackets, View(variable).\n\nBoth print() and View() are some of the many built-in functions1 available in R.\nIn RStudio, the list of variables that have been loaded can be viewed in the environment pane.\n\n\n\n\n\nA screenshot of the environment pane with the stored variables.\n\nprint(variable_1)\n\n[1] 5\n\n\n\nView(variable_2)\n\nOutput of View() will be seen in the script pane"
  },
  {
    "objectID": "slides.html",
    "href": "slides.html",
    "title": "William Okech",
    "section": "",
    "text": "form\nat:\nrevealjs"
  },
  {
    "objectID": "slides.html#slide-title",
    "href": "slides.html#slide-title",
    "title": "William Okech",
    "section": "slide title",
    "text": "slide title"
  },
  {
    "objectID": "slides.html#next-slide-title",
    "href": "slides.html#next-slide-title",
    "title": "William Okech",
    "section": "next slide title!",
    "text": "next slide title!"
  },
  {
    "objectID": "posts/series_2/new_post_1/post_1.html",
    "href": "posts/series_2/new_post_1/post_1.html",
    "title": "Kenya Census Insights (Demographics)",
    "section": "",
    "text": "To answer this question, I reviewed the Kenya Population and Housing Census (2019)12 report, which provides data on population by sex and age at the county and sub-county levels. This analysis was inspired by Rose Mintzer-Sweeney’s article “Sex and the Census,” published on the Datawrapper website 3.\nVarious biological, cultural, public health, and economic factors can influence the global human sex ratio. For instance, at birth, the human sex ratio is “male-biased,” with approximately 105 males born per 100 girls. However, with increasing age, the susceptibility to infectious diseases, sex-selective abortions, and higher life expectancies for women can cause fluctuations in the human sex ratio 4.The total Kenyan population in 2019 (according to the census) was 47,564,296. When I compared the number of males to females at the national level (Figure 1), I found that there were 98 males for every 100 females in the country5.\nKnowing there were more females than males, I sought to determine whether these differences persisted across all age groups (Figure 2).\nAs expected, I observed a higher number of males compared with females between 0 to 18 years. One reason could be the higher male-to-female ratio seen at birth globally 6. Between the ages of 19 to 34 years, the male-to-female ratio decreases rapidly, while from 35 to 56 years, the ratio increases rapidly. The cause of this fluctuation is not apparent, but various public health factors may be responsible for the shifts observed within these age groups. Finally, the number of males compared with females steadily decreases after age 60. The decrease in the number of males to females could result from increases in life expectancy favoring women. This is demonstrated in the Economic Survey 2022, which shows that the male life expectancy is 60.6 vs. 66.5 for females7 or a prevalence of medical conditions that disproportionately affect men.\nBy focusing on the national human sex ratio, we may assume that the male-to-female ratio across all the regions in Kenya is equal. Kenya has 47 diverse counties with different population densities, climatic conditions, economic opportunities, and levels of development. Not surprisingly, we find (Figure 3) that there is a wide range of human sex ratios (90–120 males per 100 females) across the different counties (administrative units).\nThe highest sex ratio is found in Garissa county (120 males per 100 females), and the lowest is observed in Siaya county (90 males per 100 females). Many counties with low sex ratios (more females) are primarily located in the west of Kenya, and counties with high sex ratios (more males) are found in the north of Kenya. According to the Economic Survey (2022) [^8], male life expectancy in the west of Kenya is the lowest in the country. Homa Bay and Migori recorded a life expectancy of 50.5 years, which was approximately 10 years lower than that of females in the respective counties. This is against a difference of 3 to 5 years lower for males in some of the counties in the north of Kenya.\nWithin each of Kenya’s 47 counties are smaller administrative units known as sub-counties. For the final analysis, I thought it would be interesting to see whether the patterns observed at the county level were consistent across the various sub-counties.\nHaving just observed that counties in the north of Kenya had the highest number of males per 100 females, I was surprised to find that Mandera Central (Mandera County) and Tarbaj (Wajir County) sub-counties in the north were among the sub-counties with the lowest number of males per 100 females (Figure 4). Why females tend to concentrate within specific regions in these two counties may be an interesting aspect to investigate in future studies.\nOverall, many factors may affect the human sex ratio at the county and sub-county levels and cause the differences in the human sex ratio seen with age. High rural-urban migration, public health factors (including the prevalence of various communicable and non-communicable diseases), climate, and location’s primary source of employment may skew the number of males to females in certain sub-counties. Therefore, future work should focus on the causes of these variations in the human sex ratio and the implications for administrative planning at the national, county, and sub-county levels."
  },
  {
    "objectID": "posts/series_2/new_post_1/post_1.html#section",
    "href": "posts/series_2/new_post_1/post_1.html#section",
    "title": "Are there more men than women in Kenya?",
    "section": "",
    "text": "[^1] Kenya National Bureau of Statistics. The 2019 Kenya Population and Housing Census. Volume I: Population by County and Sub-County and Volume III: Distribution of Population by Age and Sex. [^2] Shelmith Kariuki (2020). rKenyaCensus: 2019 Kenya Population and Housing Census Results. R package version 0.0.2. [^3] Rose Mintzer-Sweeney’s article: https://blog.datawrapper.de/gender-ratio-american-history/ [^4] Hannah Ritchie and Max Roser (2019) - “Gender Ratio.” Published online at OurWorldInData.org. Retrieved from: ‘https://ourworldindata.org/gender-ratio’ [Online Resource] [^5] Additionally, there were also 1,524 individuals classified as intersex, but their low numbers prevented their inclusion in the analysis. [^6] Kenya National Bureau of Statistics. The Economic Survey 2022"
  },
  {
    "objectID": "practice.html",
    "href": "practice.html",
    "title": "Untitled",
    "section": "",
    "text": "1 + 1"
  }
]