<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>William Okech</title>
<link>https://williamokech.netlify.app/blog.html</link>
<atom:link href="https://williamokech.netlify.app/blog.xml" rel="self" type="application/rss+xml"/>
<description>This is William Okech&#39;s personal Blog.</description>
<generator>quarto-1.2.269</generator>
<lastBuildDate>Wed, 30 Nov 2022 21:00:00 GMT</lastBuildDate>
<item>
  <title>A roof over your head</title>
  <dc:creator>William Okech</dc:creator>
  <link>https://williamokech.netlify.app/posts/series_2/new_post_2/post_2.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>An aerial view of most settlements in Kenya will demonstrate that many residential home roofs are constructed using iron sheets. Indeed, this is confirmed by the Kenya Population and Housing Census (2019) report <sup>1</sup> <sup>2</sup> where we see that 4 out of every 5 households (total number = 12,043,016) in Kenya is roofed using iron sheets (Figure 1). Overall, the top 5 building materials are iron sheets (80.3%), concrete (8.2%), grass/twigs (5.1%), makuti (sun-dried coconut palm leaves; 1.6%), and asbestos (1.4%). Despite the widespread use of iron sheets, it is surprising to note that 1.4% (2.2% urban and 0.9% rural) of residential household roofs (which is approximately 170,000) are covered with asbestos-based roofing materials (NB: this figure does not include public buildings such as educational institutions and government facilities).</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://williamokech.netlify.app/posts/series_2/new_post_2/images/national_treemap.png" class="img-fluid figure-img" style="width:90.0%"></p>
</figure>
</div>
<p>Figure 1: Roof types in Kenya (visualizations generated in RStudio)</p>
</section>
<section id="asbestos-and-its-potential-risks" class="level1">
<h1>Asbestos and its potential risks</h1>
<p>Asbestos refers to a class of six minerals that naturally form a bundle of fibers. These fibers have many properties that make them attractive, including a lack of electrical conductivity, and chemical, heat, and fire resistance. Historically, asbestos has been used for various commercial and industrial applications, including roofing shingles, automobile brakes, and textured paints for walls and ceilings <sup>3</sup>. However, using asbestos for products that come into regular contact with humans is quite problematic. Why? Asbestos is a known human carcinogen, and the primary risk factor for most mesotheliomas is asbestos exposure <sup>4</sup> <sup>5</sup>. Furthermore, asbestos exposure (depending on the frequency, amount, and type) can cause asbestosis, pleural disease, and cancer. If asbestos-based materials remain intact, there is minimal risk to the user, but if materials are damaged via natural degradation or during home demolition and remodeling, tiny asbestos fibers will be released into the air <sup>6</sup> <sup>7</sup>. In Kenya, Legal Notice No.&nbsp;121 of the Environmental Management and Coordination (Waste Management) Regulations (2006)<sup>8</sup> states that waste containing asbestos is classified as hazardous. Why should Kenyans be concerned about this? In the 2013/2014 financial year, Kenya spent approximately one-tenth of its total health budget on asbestos-related cancers <sup>9</sup> <sup>10</sup> <sup>11</sup>.</p>
<p>Where do we find high numbers of asbestos-based roofs in Kenya? As previously stated, 1.4% of households in Kenya have asbestos-based roofs. Figure 2 demonstrates the percentage of households with asbestos-based roofs in every county in Kenya. Interestingly, 4 (Nairobi, Kajiado, Machakos, and Kiambu) out of the top 6 counties (from a total of 47) fall within the Nairobi Metropolitan region.</p>
</section>
<section id="where-do-we-find-high-numbers-of-asbestos-based-roofs-in-kenya" class="level1">
<h1>Where do we find high numbers of asbestos-based roofs in Kenya?</h1>
<p>As previously stated, 1.4% of households in Kenya have asbestos-based roofs. Figure 2 demonstrates the percentage of households with asbestos-based roofs in every county in Kenya. Interestingly, 4 (Nairobi, Kajiado, Machakos, and Kiambu) out of the top 6 counties (from a total of 47) fall within the Nairobi Metropolitan region.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://williamokech.netlify.app/posts/series_2/new_post_2/images/all_counties_asbestos_barplot_map.png" class="img-fluid figure-img" style="width:90.0%"></p>
</figure>
</div>
<p>Figure 2: Percentage(%) of households with asbestos-based roofs distributed by county (visualizations generated using RStudio)</p>
<p>Next, I investigated the subcounties with the highest number of households with asbestos-based roofs. The top 5 subcounties are located within Nairobi county, with Embakasi subcounty taking the lead with just over 8,000 households.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://williamokech.netlify.app/posts/series_2/new_post_2/images/top_households_asbestos_raw.png" class="img-fluid figure-img" style="width:90.0%"></p>
</figure>
</div>
<p>Figure 3: The top ten subcounties with the highest number of households that have asbestos-based roofs (visualizations generated using RStudio)</p>
</section>
<section id="conclusion" class="level1">
<h1>Conclusion</h1>
<p>Overall, this study demonstrates that a notable proportion of Kenyan households used asbestos-based roofing materials, with Nairobi Metropolitan county accounting for the largest number of households. It is widely acknowledged that asbestos is harmful to our health, and asbestos-related diseases impose a significant burden on the economy. However, the impact of these roofs on the health of residents may not be fully apparent as asbestos exposure may also occur in various settings such as educational facilities and government institutions. To lessen the impact of asbestos exposure, it would be beneficial for local/county governments to educate residents about the dangers of asbestos and facilitate the complex and costly removal of asbestos-based roofing materials.</p>


</section>


<div id="quarto-appendix" class="default"><section class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>Kenya National Bureau of Statistics. The 2019 Kenya Population and Housing Census. Volume I: Population by County and Sub-County and Volume III: Distribution of Population by Age and Sex.↩︎</p></li>
<li id="fn2"><p>Shelmith Kariuki (2020). rKenyaCensus: 2019 Kenya Population and Housing Census Results. R package version 0.0.2.↩︎</p></li>
<li id="fn3"><p>Learn About Asbestos (no date) EPA. Environmental Protection Agency. Available at: https://www.epa.gov/asbestos/learn-about-asbestos (Accessed: December 1, 2022).↩︎</p></li>
<li id="fn4"><p>Asbestos exposure and cancer risk fact sheet (no date) National Cancer Institute. Available at: https://www.cancer.gov/about-cancer/causes-prevention/risk/substances/asbestos/asbestos-fact-sheet (Accessed: December 1, 2022).↩︎</p></li>
<li id="fn5"><p>Asbestos (no date) World Health Organization. World Health Organization. Available at: https://www.iarc.who.int/risk-factor/asbestos/ (Accessed: December 1, 2022).↩︎</p></li>
<li id="fn6"><p>Learn About Asbestos (no date) EPA. Environmental Protection Agency. Available at: https://www.epa.gov/asbestos/learn-about-asbestos (Accessed: December 1, 2022).↩︎</p></li>
<li id="fn7"><p>Asbestos and your health (2016) Centers for Disease Control and Prevention. Centers for Disease Control and Prevention. Available at: https://www.atsdr.cdc.gov/asbestos/index.html (Accessed: December 1, 2022).↩︎</p></li>
<li id="fn8"><p>Act Title: ENVIRONMENTAL MANAGEMENT AND CO-ORDINATION (no date) No.&nbsp;8 of 1999. Available at: http://kenyalaw.org:8181/exist/kenyalex/sublegview.xql?subleg=No.+8+of+1999 (Accessed: December 1, 2022).↩︎</p></li>
<li id="fn9"><p>Okoth, D. (2013) Slow transition from use of asbestos raises concern as cancer cases rise, The Standard. Available at: https://www.standardmedia.co.ke/lifestyle/article/2000096118/slow-transition-from-use-of-asbestos-raises-concern-as-cancer-cases-rise (Accessed: December 1, 2022).↩︎</p></li>
<li id="fn10"><p>GCR, S. (2016) Kenya faces cancer epidemic caused by asbestos roofs, Global Construction Review. Available at: https://www.globalconstructionreview.com/kenya-faces-cancer-epid7emic-caus7ed-asbe7stos/ (Accessed: December 1, 2022).↩︎</p></li>
<li id="fn11"><p>Irungu, S. (2020) Exposure to the noxious asbestos needs to be alleviated with a lot of care, Kenya Climate Innovation Center (KCIC). Available at: https://www.kenyacic.org/2019/11/exposure-to-the-noxious-asbestos-needs-to-be-alleviated-with-a-lot-of-care/ (Accessed: December 1, 2022).↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>RStudio</category>
  <category>R</category>
  <category>Data Stories</category>
  <category>Blog</category>
  <category>Kenya Census</category>
  <guid>https://williamokech.netlify.app/posts/series_2/new_post_2/post_2.html</guid>
  <pubDate>Wed, 30 Nov 2022 21:00:00 GMT</pubDate>
  <media:content url="https://williamokech.netlify.app/posts/series_2/new_post_2/images/national_treemap.png" medium="image" type="image/png" height="96" width="144"/>
</item>
<item>
  <title>The Basics of R and RStudio</title>
  <dc:creator>William Okech</dc:creator>
  <link>https://williamokech.netlify.app/posts/series_1/new_post_8/post_8.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<p>Data structures in R are tools for storing and organizing multiple values.</p>
<p>They help to organize stored data in a way that the data can be used more effectively. Data structures vary according to the number of dimensions and the data types (heterogeneous or homogeneous) contained. The primary data structures are:</p>
<ol type="1">
<li><p>Vectors (<a href="posts/series_1/new_post_6/post_6.html">link</a>)</p></li>
<li><p>Lists</p></li>
<li><p>Data frames</p></li>
<li><p>Matrices</p></li>
<li><p>Arrays</p></li>
<li><p>Factors</p></li>
</ol>
</section>
<section id="data-structures" class="level2">
<h2 class="anchored" data-anchor-id="data-structures">Data structures</h2>
<section id="vectors" class="level3">
<h3 class="anchored" data-anchor-id="vectors">1. Vectors</h3>
<p>Discussed in a previous <a href="posts/series_1/new_post_6/post_6.html">post</a></p>
</section>
<section id="lists" class="level3">
<h3 class="anchored" data-anchor-id="lists">2. Lists</h3>
<p>Lists are objects/containers that hold elements of the same or different types. They can containing strings, numbers, vectors, matrices, functions, or other lists. Lists are created with the <code>list()</code> function</p>
<section id="examples" class="level4">
<h4 class="anchored" data-anchor-id="examples">Examples</h4>
</section>
<section id="a.-three-element-list" class="level4">
<h4 class="anchored" data-anchor-id="a.-three-element-list">a. Three element list</h4>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">list_1 <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">list</span>(<span class="dv" style="color: #AD0000;">10</span>, <span class="dv" style="color: #AD0000;">30</span>, <span class="dv" style="color: #AD0000;">50</span>)</span></code></pre></div>
</div>
</section>
<section id="b.-single-element-list" class="level4">
<h4 class="anchored" data-anchor-id="b.-single-element-list">b. Single element list</h4>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">list_2 <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">list</span>(<span class="fu" style="color: #4758AB;">c</span>(<span class="dv" style="color: #AD0000;">10</span>, <span class="dv" style="color: #AD0000;">30</span>, <span class="dv" style="color: #AD0000;">50</span>))</span></code></pre></div>
</div>
</section>
<section id="c.-three-element-list" class="level4">
<h4 class="anchored" data-anchor-id="c.-three-element-list">c.&nbsp;Three element list</h4>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">list_3 <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">list</span>(<span class="dv" style="color: #AD0000;">1</span><span class="sc" style="color: #5E5E5E;">:</span><span class="dv" style="color: #AD0000;">3</span>, <span class="fu" style="color: #4758AB;">c</span>(<span class="dv" style="color: #AD0000;">50</span>,<span class="dv" style="color: #AD0000;">40</span>), <span class="dv" style="color: #AD0000;">3</span><span class="sc" style="color: #5E5E5E;">:-</span><span class="dv" style="color: #AD0000;">5</span>)</span></code></pre></div>
</div>
</section>
<section id="d.-list-with-elements-of-different-types" class="level4">
<h4 class="anchored" data-anchor-id="d.-list-with-elements-of-different-types">d.&nbsp;List with elements of different types</h4>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">list_4 <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">list</span>(<span class="fu" style="color: #4758AB;">c</span>(<span class="st" style="color: #20794D;">"a"</span>, <span class="st" style="color: #20794D;">"b"</span>, <span class="st" style="color: #20794D;">"c"</span>), <span class="dv" style="color: #AD0000;">5</span><span class="sc" style="color: #5E5E5E;">:-</span><span class="dv" style="color: #AD0000;">1</span>)</span></code></pre></div>
</div>
</section>
<section id="e.-list-which-contains-a-list" class="level4">
<h4 class="anchored" data-anchor-id="e.-list-which-contains-a-list">e. List which contains a list</h4>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">list_5 <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">list</span>(<span class="fu" style="color: #4758AB;">c</span>(<span class="st" style="color: #20794D;">"a"</span>, <span class="st" style="color: #20794D;">"b"</span>, <span class="st" style="color: #20794D;">"c"</span>), <span class="dv" style="color: #AD0000;">5</span><span class="sc" style="color: #5E5E5E;">:-</span><span class="dv" style="color: #AD0000;">1</span>, list_1)</span></code></pre></div>
</div>
</section>
<section id="f.-set-names-for-the-list-elements" class="level4">
<h4 class="anchored" data-anchor-id="f.-set-names-for-the-list-elements">f.&nbsp;Set names for the list elements</h4>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="fu" style="color: #4758AB;">names</span>(list_5)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>NULL</code></pre>
</div>
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="fu" style="color: #4758AB;">names</span>(list_5) <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="st" style="color: #20794D;">"character vector"</span>, <span class="st" style="color: #20794D;">"numeric vector"</span>, <span class="st" style="color: #20794D;">"list"</span>)</span>
<span id="cb8-2"><span class="fu" style="color: #4758AB;">names</span>(list_5)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "character vector" "numeric vector"   "list"            </code></pre>
</div>
</div>
</section>
<section id="g.-access-elements" class="level4">
<h4 class="anchored" data-anchor-id="g.-access-elements">g. Access elements</h4>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1">list_5[[<span class="dv" style="color: #AD0000;">1</span>]]</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "a" "b" "c"</code></pre>
</div>
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1">list_5[[<span class="st" style="color: #20794D;">"character vector"</span>]]</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "a" "b" "c"</code></pre>
</div>
</div>
</section>
<section id="h.-length-of-list" class="level4">
<h4 class="anchored" data-anchor-id="h.-length-of-list">h. Length of list</h4>
<div class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1"><span class="fu" style="color: #4758AB;">length</span>(list_1)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 3</code></pre>
</div>
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb16-1"><span class="fu" style="color: #4758AB;">length</span>(list_5)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 3</code></pre>
</div>
</div>
</section>
</section>
<section id="data-frames" class="level3">
<h3 class="anchored" data-anchor-id="data-frames">3. Data frames</h3>
<p>A data frame is one of the most common data objects used to store tabular data in R. Tabular data has rows representing observations and columns representing variables. Dataframes contain lists of equal-length vectors. Each column holds a different type of data, but within each column, the elements must be of the same type. The most common data frame characteristics are listed below:</p>
<p>• Columns should have a name;</p>
<p>• Row names should be unique;</p>
<p>• Various data can be stored (such as numeric, factor, and character);</p>
<p>• The individual columns should contain the same number of data items.</p>
</section>
<section id="creation-of-data-frames" class="level3">
<h3 class="anchored" data-anchor-id="creation-of-data-frames">Creation of data frames</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb18-1">level <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="st" style="color: #20794D;">"Low"</span>, <span class="st" style="color: #20794D;">"Mid"</span>, <span class="st" style="color: #20794D;">"High"</span>)</span>
<span id="cb18-2">language <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="st" style="color: #20794D;">"R"</span>, <span class="st" style="color: #20794D;">"RStudio"</span>, <span class="st" style="color: #20794D;">"Shiny"</span>)</span>
<span id="cb18-3">age <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="dv" style="color: #AD0000;">25</span>, <span class="dv" style="color: #AD0000;">36</span>, <span class="dv" style="color: #AD0000;">47</span>)</span>
<span id="cb18-4"></span>
<span id="cb18-5">df_1 <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">data.frame</span>(level, language, age)</span></code></pre></div>
</div>
</section>
<section id="functions-used-to-manipulate-data-frames" class="level3">
<h3 class="anchored" data-anchor-id="functions-used-to-manipulate-data-frames">Functions used to manipulate data frames</h3>
<section id="a.-number-of-rows" class="level4">
<h4 class="anchored" data-anchor-id="a.-number-of-rows">a. Number of rows</h4>
<div class="cell">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb19-1"><span class="fu" style="color: #4758AB;">nrow</span>(df_1)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 3</code></pre>
</div>
</div>
</section>
<section id="b.-number-of-columns" class="level4">
<h4 class="anchored" data-anchor-id="b.-number-of-columns">b. Number of columns</h4>
<div class="cell">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb21-1"><span class="fu" style="color: #4758AB;">ncol</span>(df_1)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 3</code></pre>
</div>
</div>
</section>
<section id="c.-dimensions" class="level4">
<h4 class="anchored" data-anchor-id="c.-dimensions">c.&nbsp;Dimensions</h4>
<div class="cell">
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb23-1"><span class="fu" style="color: #4758AB;">dim</span>(df_1)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 3 3</code></pre>
</div>
</div>
</section>
<section id="d.-class-of-data-frame" class="level4">
<h4 class="anchored" data-anchor-id="d.-class-of-data-frame">d.&nbsp;Class of data frame</h4>
<div class="cell">
<div class="sourceCode cell-code" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb25-1"><span class="fu" style="color: #4758AB;">class</span>(df_1)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "data.frame"</code></pre>
</div>
</div>
</section>
<section id="e.-column-names" class="level4">
<h4 class="anchored" data-anchor-id="e.-column-names">e. Column names</h4>
<div class="cell">
<div class="sourceCode cell-code" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb27-1"><span class="fu" style="color: #4758AB;">colnames</span>(df_1)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "level"    "language" "age"     </code></pre>
</div>
</div>
</section>
<section id="f.-row-names" class="level4">
<h4 class="anchored" data-anchor-id="f.-row-names">f.&nbsp;Row names</h4>
<div class="cell">
<div class="sourceCode cell-code" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb29-1"><span class="fu" style="color: #4758AB;">rownames</span>(df_1)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "1" "2" "3"</code></pre>
</div>
</div>
</section>
<section id="g.-top-and-bottom-values" class="level4">
<h4 class="anchored" data-anchor-id="g.-top-and-bottom-values">g. Top and bottom values</h4>
<div class="cell">
<div class="sourceCode cell-code" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb31-1"><span class="fu" style="color: #4758AB;">head</span>(df_1, <span class="at" style="color: #657422;">n=</span><span class="dv" style="color: #AD0000;">2</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>  level language age
1   Low        R  25
2   Mid  RStudio  36</code></pre>
</div>
<div class="sourceCode cell-code" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb33-1"><span class="fu" style="color: #4758AB;">tail</span>(df_1, <span class="at" style="color: #657422;">n=</span><span class="dv" style="color: #AD0000;">2</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>  level language age
2   Mid  RStudio  36
3  High    Shiny  47</code></pre>
</div>
</div>
</section>
<section id="h.-access-columns" class="level4">
<h4 class="anchored" data-anchor-id="h.-access-columns">h. Access columns</h4>
<div class="cell">
<div class="sourceCode cell-code" id="cb35" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb35-1">df_1<span class="sc" style="color: #5E5E5E;">$</span>level</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "Low"  "Mid"  "High"</code></pre>
</div>
</div>
</section>
<section id="i.-access-individual-elements" class="level4">
<h4 class="anchored" data-anchor-id="i.-access-individual-elements">i. Access individual elements</h4>
<div class="cell">
<div class="sourceCode cell-code" id="cb37" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb37-1">df_1[<span class="dv" style="color: #AD0000;">3</span>,<span class="dv" style="color: #AD0000;">2</span>]</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "Shiny"</code></pre>
</div>
<div class="sourceCode cell-code" id="cb39" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb39-1">df_1[<span class="dv" style="color: #AD0000;">2</span>, <span class="dv" style="color: #AD0000;">1</span><span class="sc" style="color: #5E5E5E;">:</span><span class="dv" style="color: #AD0000;">2</span>]</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>  level language
2   Mid  RStudio</code></pre>
</div>
</div>
</section>
<section id="j.-access-columns-with-index" class="level4">
<h4 class="anchored" data-anchor-id="j.-access-columns-with-index">j. Access columns with index</h4>
<div class="cell">
<div class="sourceCode cell-code" id="cb41" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb41-1">df_1[, <span class="dv" style="color: #AD0000;">3</span>]</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 25 36 47</code></pre>
</div>
<div class="sourceCode cell-code" id="cb43" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb43-1">df_1[, <span class="fu" style="color: #4758AB;">c</span>(<span class="st" style="color: #20794D;">"language"</span>)]</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "R"       "RStudio" "Shiny"  </code></pre>
</div>
</div>
</section>
<section id="k.-access-rows-with-index" class="level4">
<h4 class="anchored" data-anchor-id="k.-access-rows-with-index">k. Access rows with index</h4>
<div class="cell">
<div class="sourceCode cell-code" id="cb45" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb45-1">df_1[<span class="dv" style="color: #AD0000;">2</span>, ]</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>  level language age
2   Mid  RStudio  36</code></pre>
</div>
</div>
</section>
</section>
<section id="matrices" class="level3">
<h3 class="anchored" data-anchor-id="matrices">4. Matrices</h3>
<p>A matrix is a rectangular two-dimensional (2D) homogeneous data set containing rows and columns. It contains real numbers that are arranged in a fixed number of rows and columns. Matrices are generally used for various mathematical and statistical applications.</p>
<section id="a.-creation-of-matrices" class="level4">
<h4 class="anchored" data-anchor-id="a.-creation-of-matrices">a. Creation of matrices</h4>
<div class="cell">
<div class="sourceCode cell-code" id="cb47" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb47-1">m1 <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">matrix</span>(<span class="dv" style="color: #AD0000;">1</span><span class="sc" style="color: #5E5E5E;">:</span><span class="dv" style="color: #AD0000;">9</span>, <span class="at" style="color: #657422;">nrow =</span> <span class="dv" style="color: #AD0000;">3</span>, <span class="at" style="color: #657422;">ncol =</span> <span class="dv" style="color: #AD0000;">3</span>) </span>
<span id="cb47-2">m2 <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">matrix</span>(<span class="dv" style="color: #AD0000;">21</span><span class="sc" style="color: #5E5E5E;">:</span><span class="dv" style="color: #AD0000;">29</span>, <span class="at" style="color: #657422;">nrow =</span> <span class="dv" style="color: #AD0000;">3</span>, <span class="at" style="color: #657422;">ncol =</span> <span class="dv" style="color: #AD0000;">3</span>) </span>
<span id="cb47-3">m3 <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">matrix</span>(<span class="dv" style="color: #AD0000;">1</span><span class="sc" style="color: #5E5E5E;">:</span><span class="dv" style="color: #AD0000;">12</span>, <span class="at" style="color: #657422;">nrow =</span> <span class="dv" style="color: #AD0000;">2</span>, <span class="at" style="color: #657422;">ncol =</span> <span class="dv" style="color: #AD0000;">6</span>)</span></code></pre></div>
</div>
</section>
<section id="b.-obtain-the-dimensions-of-the-matrices" class="level4">
<h4 class="anchored" data-anchor-id="b.-obtain-the-dimensions-of-the-matrices">b. Obtain the dimensions of the matrices</h4>
<div class="cell">
<div class="sourceCode cell-code" id="cb48" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb48-1"><span class="co" style="color: #5E5E5E;"># m1</span></span>
<span id="cb48-2"><span class="fu" style="color: #4758AB;">nrow</span>(m1)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 3</code></pre>
</div>
<div class="sourceCode cell-code" id="cb50" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb50-1"><span class="fu" style="color: #4758AB;">ncol</span>(m1)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 3</code></pre>
</div>
<div class="sourceCode cell-code" id="cb52" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb52-1"><span class="fu" style="color: #4758AB;">dim</span>(m1)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 3 3</code></pre>
</div>
<div class="sourceCode cell-code" id="cb54" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb54-1"><span class="co" style="color: #5E5E5E;"># m3</span></span>
<span id="cb54-2"><span class="fu" style="color: #4758AB;">nrow</span>(m3)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 2</code></pre>
</div>
<div class="sourceCode cell-code" id="cb56" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb56-1"><span class="fu" style="color: #4758AB;">ncol</span>(m3)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 6</code></pre>
</div>
<div class="sourceCode cell-code" id="cb58" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb58-1"><span class="fu" style="color: #4758AB;">dim</span>(m3)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 2 6</code></pre>
</div>
</div>
</section>
<section id="c.-arithmetic-with-matrices" class="level4">
<h4 class="anchored" data-anchor-id="c.-arithmetic-with-matrices">c.&nbsp;Arithmetic with matrices</h4>
<div class="cell">
<div class="sourceCode cell-code" id="cb60" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb60-1">m1<span class="sc" style="color: #5E5E5E;">+</span>m2</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>     [,1] [,2] [,3]
[1,]   22   28   34
[2,]   24   30   36
[3,]   26   32   38</code></pre>
</div>
<div class="sourceCode cell-code" id="cb62" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb62-1">m1<span class="sc" style="color: #5E5E5E;">-</span>m2</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>     [,1] [,2] [,3]
[1,]  -20  -20  -20
[2,]  -20  -20  -20
[3,]  -20  -20  -20</code></pre>
</div>
<div class="sourceCode cell-code" id="cb64" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb64-1">m1<span class="sc" style="color: #5E5E5E;">*</span>m2</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>     [,1] [,2] [,3]
[1,]   21   96  189
[2,]   44  125  224
[3,]   69  156  261</code></pre>
</div>
<div class="sourceCode cell-code" id="cb66" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb66-1">m1<span class="sc" style="color: #5E5E5E;">/</span>m2</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>           [,1]      [,2]      [,3]
[1,] 0.04761905 0.1666667 0.2592593
[2,] 0.09090909 0.2000000 0.2857143
[3,] 0.13043478 0.2307692 0.3103448</code></pre>
</div>
<div class="sourceCode cell-code" id="cb68" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb68-1">m1 <span class="sc" style="color: #5E5E5E;">==</span> m2</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>      [,1]  [,2]  [,3]
[1,] FALSE FALSE FALSE
[2,] FALSE FALSE FALSE
[3,] FALSE FALSE FALSE</code></pre>
</div>
</div>
</section>
<section id="d.-matrix-multiplication" class="level4">
<h4 class="anchored" data-anchor-id="d.-matrix-multiplication">d.&nbsp;Matrix multiplication</h4>
<div class="cell">
<div class="sourceCode cell-code" id="cb70" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb70-1">m5 <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">matrix</span>(<span class="dv" style="color: #AD0000;">1</span><span class="sc" style="color: #5E5E5E;">:</span><span class="dv" style="color: #AD0000;">10</span>, <span class="at" style="color: #657422;">nrow =</span> <span class="dv" style="color: #AD0000;">5</span>)</span>
<span id="cb70-2">m6 <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">matrix</span>(<span class="dv" style="color: #AD0000;">43</span><span class="sc" style="color: #5E5E5E;">:</span><span class="dv" style="color: #AD0000;">34</span>, <span class="at" style="color: #657422;">nrow =</span> <span class="dv" style="color: #AD0000;">5</span>)</span>
<span id="cb70-3"></span>
<span id="cb70-4">m5<span class="sc" style="color: #5E5E5E;">*</span>m6</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>     [,1] [,2]
[1,]   43  228
[2,]   84  259
[3,]  123  288
[4,]  160  315
[5,]  195  340</code></pre>
</div>
<div class="sourceCode cell-code" id="cb72" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb72-1"><span class="co" style="color: #5E5E5E;"># m5%*%m6 will not work because of the dimesions.</span></span>
<span id="cb72-2"><span class="co" style="color: #5E5E5E;"># the vector m6 needs to be transposed.</span></span>
<span id="cb72-3"></span>
<span id="cb72-4"><span class="co" style="color: #5E5E5E;"># Transpose</span></span>
<span id="cb72-5">m5<span class="sc" style="color: #5E5E5E;">%*%</span><span class="fu" style="color: #4758AB;">t</span>(m6)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>     [,1] [,2] [,3] [,4] [,5]
[1,]  271  264  257  250  243
[2,]  352  343  334  325  316
[3,]  433  422  411  400  389
[4,]  514  501  488  475  462
[5,]  595  580  565  550  535</code></pre>
</div>
</div>
</section>
<section id="e.-generate-an-identity-matrix" class="level4">
<h4 class="anchored" data-anchor-id="e.-generate-an-identity-matrix">e. Generate an identity matrix</h4>
<div class="cell">
<div class="sourceCode cell-code" id="cb74" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb74-1"><span class="fu" style="color: #4758AB;">diag</span>(<span class="dv" style="color: #AD0000;">5</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>     [,1] [,2] [,3] [,4] [,5]
[1,]    1    0    0    0    0
[2,]    0    1    0    0    0
[3,]    0    0    1    0    0
[4,]    0    0    0    1    0
[5,]    0    0    0    0    1</code></pre>
</div>
</div>
</section>
<section id="f.-column-and-row-names" class="level4">
<h4 class="anchored" data-anchor-id="f.-column-and-row-names">f.&nbsp;Column and row names</h4>
<div class="cell">
<div class="sourceCode cell-code" id="cb76" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb76-1"><span class="fu" style="color: #4758AB;">colnames</span>(m5)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>NULL</code></pre>
</div>
<div class="sourceCode cell-code" id="cb78" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb78-1"><span class="fu" style="color: #4758AB;">rownames</span>(m6)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>NULL</code></pre>
</div>
</div>
</section>
</section>
<section id="arrays" class="level3">
<h3 class="anchored" data-anchor-id="arrays">5. Arrays</h3>
<p>An array is a multidimensional vector that stores homogeneous data. It can be thought of as a stacked matrix and stores data in more than 2 dimensions (n-dimensional). An array is composed of rows by columns by dimensions. Example: an array with dimensions, dim = c(2,3,3), has 2 rows, 3 columns, and 3 matrices.</p>
<section id="a.-creating-arrays" class="level4">
<h4 class="anchored" data-anchor-id="a.-creating-arrays">a. Creating arrays</h4>
<div class="cell">
<div class="sourceCode cell-code" id="cb80" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb80-1">arr_1 <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">array</span>(<span class="dv" style="color: #AD0000;">1</span><span class="sc" style="color: #5E5E5E;">:</span><span class="dv" style="color: #AD0000;">12</span>, <span class="at" style="color: #657422;">dim =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="dv" style="color: #AD0000;">2</span>,<span class="dv" style="color: #AD0000;">3</span>,<span class="dv" style="color: #AD0000;">2</span>))</span>
<span id="cb80-2"></span>
<span id="cb80-3">arr_1</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>, , 1

     [,1] [,2] [,3]
[1,]    1    3    5
[2,]    2    4    6

, , 2

     [,1] [,2] [,3]
[1,]    7    9   11
[2,]    8   10   12</code></pre>
</div>
</div>
</section>
<section id="b.-filter-array-by-index" class="level4">
<h4 class="anchored" data-anchor-id="b.-filter-array-by-index">b. Filter array by index</h4>
<div class="cell">
<div class="sourceCode cell-code" id="cb82" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb82-1">arr_1[<span class="dv" style="color: #AD0000;">1</span>, , ]</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>     [,1] [,2]
[1,]    1    7
[2,]    3    9
[3,]    5   11</code></pre>
</div>
<div class="sourceCode cell-code" id="cb84" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb84-1">arr_1[<span class="dv" style="color: #AD0000;">1</span>, ,<span class="dv" style="color: #AD0000;">1</span>]</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 1 3 5</code></pre>
</div>
<div class="sourceCode cell-code" id="cb86" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb86-1">arr_1[, , <span class="dv" style="color: #AD0000;">1</span>]</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>     [,1] [,2] [,3]
[1,]    1    3    5
[2,]    2    4    6</code></pre>
</div>
</div>
</section>
</section>
<section id="factors" class="level3">
<h3 class="anchored" data-anchor-id="factors">6. Factors</h3>
<p>Factors are used to store integers or strings which are categorical. They categorize data and store the data in different levels. This form of data storage is useful for statistical modeling. Examples include TRUE or FALSE and male or female.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb88" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb88-1">vector <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="st" style="color: #20794D;">"Male"</span>, <span class="st" style="color: #20794D;">"Female"</span>)</span>
<span id="cb88-2">factor_1 <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">factor</span>(vector)</span>
<span id="cb88-3">factor_1</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] Male   Female
Levels: Female Male</code></pre>
</div>
</div>
<p>OR</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb90" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb90-1">factor_2 <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">as.factor</span>(vector)</span>
<span id="cb90-2">factor_2</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] Male   Female
Levels: Female Male</code></pre>
</div>
<div class="sourceCode cell-code" id="cb92" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb92-1"><span class="fu" style="color: #4758AB;">as.numeric</span>(factor_2)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 2 1</code></pre>
</div>
</div>


</section>
</section>

 ]]></description>
  <category>RStudio</category>
  <category>R</category>
  <category>Tutorial</category>
  <category>Blog</category>
  <guid>https://williamokech.netlify.app/posts/series_1/new_post_8/post_8.html</guid>
  <pubDate>Tue, 15 Nov 2022 21:00:00 GMT</pubDate>
  <media:content url="https://williamokech.netlify.app/posts/series_1/new_post_8/r_and_rstudio.png" medium="image" type="image/png" height="26" width="144"/>
</item>
<item>
  <title>The Basics of R and RStudio</title>
  <dc:creator>William Okech</dc:creator>
  <link>https://williamokech.netlify.app/posts/series_1/new_post_7/post_7.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<p>R has two types of missing data, NA and NULL.<sup>1</sup></p>
</section>
<section id="na" class="level2">
<h2 class="anchored" data-anchor-id="na">NA</h2>
<p>R uses <code>NA</code> to represent missing data. The <code>NA</code> appears as another element of a vector. To test each element for missingness we use <code>is.na()</code>. Generally, we can use tools such as <code>mi</code>, <code>mice</code>, and <code>Amelia</code> (which will be discussed later) to deal with missing data. The deletion of this missing data may lead to bias or data loss, so we need to be very careful when handling it. In subsequent blog posts, we will look at the use of imputation to deal with missing data.</p>
</section>
<section id="null" class="level2">
<h2 class="anchored" data-anchor-id="null">NULL</h2>
<p><code>NULL</code> represents nothingness or the “absence of anything”. <sup>2</sup></p>
<p>It does not mean missing but represents nothing. <code>NULL</code> cannot exist within a vector because it disappears.</p>
</section>
<section id="supplementary-reading" class="level2">
<h2 class="anchored" data-anchor-id="supplementary-reading">Supplementary Reading</h2>
<ol type="1">
<li>An excellent post from the blog <a href="https://datasciencebydesign.org/blog/when-we-miss-missingness">“Data Science by Design”</a> on the role of missingness.</li>
</ol>


</section>


<div id="quarto-appendix" class="default"><section class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>Adapted from Lander, J. P. (2014) R for everyone: Advanced analytics and graphics. Addison-Wesley.↩︎</p></li>
<li id="fn2"><p>Adapted from Lander, J. P. (2014) R for everyone: Advanced analytics and graphics. Addison-Wesley.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>RStudio</category>
  <category>R</category>
  <category>Tutorial</category>
  <category>Blog</category>
  <guid>https://williamokech.netlify.app/posts/series_1/new_post_7/post_7.html</guid>
  <pubDate>Sun, 13 Nov 2022 21:00:00 GMT</pubDate>
  <media:content url="https://williamokech.netlify.app/posts/series_1/new_post_7/r_and_rstudio.png" medium="image" type="image/png" height="26" width="144"/>
</item>
<item>
  <title>The Basics of R and RStudio</title>
  <dc:creator>William Okech</dc:creator>
  <link>https://williamokech.netlify.app/posts/series_1/new_post_6/post_6.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<p>A vector is a collection of elements of the same data type, and they are a basic data structure in R programming.</p>
<p>Vectors cannot be of mixed data type. The most common way to create a vector is with <code>c()</code>, where “c” stands for combine. In R, vectors do not have dimensions; therefore, they cannot be defined by columns or rows. Vectors can be divided into atomic vectors and lists (discussed in <a href="posts/series_1/new_post_8/post_8.html">Part 7</a>). The atomic vectors include logical, character, and numeric (integer or double).</p>
<p>Additionally, R is a vectorized language because mathematical operations are applied to each element of the vector without the need to loop through the vector.Examples of vectors are shown below:</p>
<p>• Numbers: <code>c(2, 10, 16, -5)</code></p>
<p>• Characters: <code>c("R", "RStudio", "Shiny", "Quarto")</code></p>
<p>• Logicals: <code>c("TRUE", "FALSE", "TRUE")</code></p>
</section>
<section id="sequence-generation" class="level2">
<h2 class="anchored" data-anchor-id="sequence-generation">Sequence Generation</h2>
<p>To generate a vector with a sequence of consecutive numbers, we can use <code>:</code>, <code>sequence()</code>, or <code>seq()</code>.</p>
<section id="generate-a-sequence-using" class="level3">
<h3 class="anchored" data-anchor-id="generate-a-sequence-using">Generate a sequence using <code>:</code></h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">a <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="dv" style="color: #AD0000;">9</span><span class="sc" style="color: #5E5E5E;">:</span><span class="dv" style="color: #AD0000;">18</span></span>
<span id="cb1-2">a</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code> [1]  9 10 11 12 13 14 15 16 17 18</code></pre>
</div>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">a_rev <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="dv" style="color: #AD0000;">18</span><span class="sc" style="color: #5E5E5E;">:</span><span class="dv" style="color: #AD0000;">9</span></span>
<span id="cb3-2">a_rev</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code> [1] 18 17 16 15 14 13 12 11 10  9</code></pre>
</div>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">a_rev_minus <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="dv" style="color: #AD0000;">5</span><span class="sc" style="color: #5E5E5E;">:-</span><span class="dv" style="color: #AD0000;">3</span></span>
<span id="cb5-2">a_rev_minus</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1]  5  4  3  2  1  0 -1 -2 -3</code></pre>
</div>
</div>
</section>
<section id="generate-a-sequence-using-sequence" class="level3">
<h3 class="anchored" data-anchor-id="generate-a-sequence-using-sequence">Generate a sequence using <code>sequence()</code></h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">b <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">sequence</span>(<span class="dv" style="color: #AD0000;">7</span>)</span>
<span id="cb7-2">b</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 1 2 3 4 5 6 7</code></pre>
</div>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">c <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">sequence</span>(<span class="fu" style="color: #4758AB;">c</span>(<span class="dv" style="color: #AD0000;">5</span>,<span class="dv" style="color: #AD0000;">9</span>))</span>
<span id="cb9-2">c</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code> [1] 1 2 3 4 5 1 2 3 4 5 6 7 8 9</code></pre>
</div>
</div>
</section>
<section id="generate-a-sequence-using-seq" class="level3">
<h3 class="anchored" data-anchor-id="generate-a-sequence-using-seq">Generate a sequence using <code>seq()</code></h3>
<p>The <code>seq()</code> function has four main arguments: seq(from, to, by, length.out), where “from” and “to” are the starting and ending elements of the sequence. Additionally, “by” is the difference between the elements, and “length.out” is the maximum length of the vector.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1">d <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">seq</span>(<span class="dv" style="color: #AD0000;">2</span>,<span class="dv" style="color: #AD0000;">20</span>,<span class="at" style="color: #657422;">by=</span><span class="dv" style="color: #AD0000;">2</span>)</span>
<span id="cb11-2">d</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code> [1]  2  4  6  8 10 12 14 16 18 20</code></pre>
</div>
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1">f <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">seq</span>(<span class="dv" style="color: #AD0000;">2</span>,<span class="dv" style="color: #AD0000;">20</span>, <span class="at" style="color: #657422;">length.out=</span><span class="dv" style="color: #AD0000;">5</span>)</span>
<span id="cb13-2">f</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1]  2.0  6.5 11.0 15.5 20.0</code></pre>
</div>
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1">h <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">seq</span>(<span class="dv" style="color: #AD0000;">20</span>,<span class="dv" style="color: #AD0000;">2</span>,<span class="at" style="color: #657422;">by=</span><span class="sc" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">2</span>)</span>
<span id="cb15-2">h</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code> [1] 20 18 16 14 12 10  8  6  4  2</code></pre>
</div>
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb17-1">j <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">seq</span>(<span class="dv" style="color: #AD0000;">20</span>, <span class="dv" style="color: #AD0000;">2</span>, <span class="at" style="color: #657422;">length.out=</span><span class="dv" style="color: #AD0000;">3</span>)</span>
<span id="cb17-2">j</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 20 11  2</code></pre>
</div>
</div>
</section>
</section>
<section id="repeating-vectors" class="level2">
<h2 class="anchored" data-anchor-id="repeating-vectors">Repeating vectors</h2>
<p>To create a repeating vector, we can use <code>rep()</code>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb19-1">k <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">rep</span>(<span class="fu" style="color: #4758AB;">c</span>(<span class="dv" style="color: #AD0000;">0</span>,<span class="dv" style="color: #AD0000;">3</span>,<span class="dv" style="color: #AD0000;">6</span>), <span class="at" style="color: #657422;">times =</span> <span class="dv" style="color: #AD0000;">3</span>)</span>
<span id="cb19-2">k</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 0 3 6 0 3 6 0 3 6</code></pre>
</div>
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb21-1">l <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">rep</span>(<span class="dv" style="color: #AD0000;">2</span><span class="sc" style="color: #5E5E5E;">:</span><span class="dv" style="color: #AD0000;">6</span>, <span class="at" style="color: #657422;">each =</span> <span class="dv" style="color: #AD0000;">3</span>)</span>
<span id="cb21-2">l</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code> [1] 2 2 2 3 3 3 4 4 4 5 5 5 6 6 6</code></pre>
</div>
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb23-1">m <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">rep</span>(<span class="dv" style="color: #AD0000;">7</span><span class="sc" style="color: #5E5E5E;">:</span><span class="dv" style="color: #AD0000;">10</span>, <span class="at" style="color: #657422;">length.out =</span> <span class="dv" style="color: #AD0000;">20</span>)</span>
<span id="cb23-2">m</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code> [1]  7  8  9 10  7  8  9 10  7  8  9 10  7  8  9 10  7  8  9 10</code></pre>
</div>
</div>
</section>
<section id="vector-operations" class="level2">
<h2 class="anchored" data-anchor-id="vector-operations">Vector Operations</h2>
<p>Vectors of equal length can be operated on together. If one vector is shorter, it will get recycled, as its elements are repeated until it matches the elements of the longer vector. When using vectors of unequal lengths, it would be ideal if the longer vector is a multiple of the shorter vector.</p>
<section id="basic-vector-operations" class="level3">
<h3 class="anchored" data-anchor-id="basic-vector-operations">Basic Vector Operations</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb25-1">vec_1 <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="dv" style="color: #AD0000;">1</span><span class="sc" style="color: #5E5E5E;">:</span><span class="dv" style="color: #AD0000;">10</span></span>
<span id="cb25-2"></span>
<span id="cb25-3">vec_1<span class="sc" style="color: #5E5E5E;">*</span><span class="dv" style="color: #AD0000;">12</span> <span class="co" style="color: #5E5E5E;"># multiplication</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code> [1]  12  24  36  48  60  72  84  96 108 120</code></pre>
</div>
<div class="sourceCode cell-code" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb27-1">vec_1<span class="sc" style="color: #5E5E5E;">+</span><span class="dv" style="color: #AD0000;">12</span> <span class="co" style="color: #5E5E5E;"># addition</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code> [1] 13 14 15 16 17 18 19 20 21 22</code></pre>
</div>
<div class="sourceCode cell-code" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb29-1">vec_1<span class="dv" style="color: #AD0000;">-12</span> <span class="co" style="color: #5E5E5E;"># subtraction</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code> [1] -11 -10  -9  -8  -7  -6  -5  -4  -3  -2</code></pre>
</div>
<div class="sourceCode cell-code" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb31-1">vec_1<span class="sc" style="color: #5E5E5E;">/</span><span class="dv" style="color: #AD0000;">3</span> <span class="co" style="color: #5E5E5E;"># division</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code> [1] 0.3333333 0.6666667 1.0000000 1.3333333 1.6666667 2.0000000 2.3333333
 [8] 2.6666667 3.0000000 3.3333333</code></pre>
</div>
<div class="sourceCode cell-code" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb33-1">vec_1<span class="sc" style="color: #5E5E5E;">^</span><span class="dv" style="color: #AD0000;">4</span> <span class="co" style="color: #5E5E5E;"># power</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code> [1]     1    16    81   256   625  1296  2401  4096  6561 10000</code></pre>
</div>
<div class="sourceCode cell-code" id="cb35" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb35-1"><span class="fu" style="color: #4758AB;">sqrt</span>(vec_1) <span class="co" style="color: #5E5E5E;"># square root</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code> [1] 1.000000 1.414214 1.732051 2.000000 2.236068 2.449490 2.645751 2.828427
 [9] 3.000000 3.162278</code></pre>
</div>
</div>
</section>
<section id="operations-on-vectors-of-equal-length" class="level3">
<h3 class="anchored" data-anchor-id="operations-on-vectors-of-equal-length">Operations on vectors of equal length</h3>
<p>Additionally, we can perform operations on two vectors of equal length.</p>
<ol type="1">
<li>Create two vectors</li>
</ol>
<div class="cell">
<div class="sourceCode cell-code" id="cb37" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb37-1">vec_3 <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="dv" style="color: #AD0000;">5</span><span class="sc" style="color: #5E5E5E;">:</span><span class="dv" style="color: #AD0000;">14</span></span>
<span id="cb37-2">vec_3</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code> [1]  5  6  7  8  9 10 11 12 13 14</code></pre>
</div>
<div class="sourceCode cell-code" id="cb39" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb39-1">vec_4 <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="dv" style="color: #AD0000;">12</span><span class="sc" style="color: #5E5E5E;">:</span><span class="dv" style="color: #AD0000;">3</span></span>
<span id="cb39-2">vec_4</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code> [1] 12 11 10  9  8  7  6  5  4  3</code></pre>
</div>
</div>
<ol start="2" type="1">
<li>Perform various arithmetic operations</li>
</ol>
<div class="cell">
<div class="sourceCode cell-code" id="cb41" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb41-1">vec_3 <span class="sc" style="color: #5E5E5E;">+</span> vec_4</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code> [1] 17 17 17 17 17 17 17 17 17 17</code></pre>
</div>
<div class="sourceCode cell-code" id="cb43" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb43-1">vec_3 <span class="sc" style="color: #5E5E5E;">-</span> vec_4</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code> [1] -7 -5 -3 -1  1  3  5  7  9 11</code></pre>
</div>
<div class="sourceCode cell-code" id="cb45" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb45-1">vec_3 <span class="sc" style="color: #5E5E5E;">/</span> vec_4</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code> [1] 0.4166667 0.5454545 0.7000000 0.8888889 1.1250000 1.4285714 1.8333333
 [8] 2.4000000 3.2500000 4.6666667</code></pre>
</div>
<div class="sourceCode cell-code" id="cb47" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb47-1">vec_3 <span class="sc" style="color: #5E5E5E;">*</span> vec_4</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code> [1] 60 66 70 72 72 70 66 60 52 42</code></pre>
</div>
<div class="sourceCode cell-code" id="cb49" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb49-1">vec_3 <span class="sc" style="color: #5E5E5E;">^</span> vec_4</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code> [1] 244140625 362797056 282475249 134217728  43046721  10000000   1771561
 [8]    248832     28561      2744</code></pre>
</div>
</div>
</section>
</section>
<section id="functions-that-can-be-applied-to-vectors" class="level2">
<h2 class="anchored" data-anchor-id="functions-that-can-be-applied-to-vectors">Functions that can be applied to vectors</h2>
<p>The functions listed below can be applied to vectors:</p>
<ol type="1">
<li><p><code>any()</code></p></li>
<li><p><code>all()</code></p></li>
<li><p><code>nchar()</code></p></li>
<li><p><code>length()</code></p></li>
<li><p><code>typeof()</code></p></li>
</ol>
<section id="examples" class="level3">
<h3 class="anchored" data-anchor-id="examples">Examples</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb51" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb51-1"><span class="fu" style="color: #4758AB;">any</span>(vec_3 <span class="sc" style="color: #5E5E5E;">&gt;</span> vec_4)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] TRUE</code></pre>
</div>
<div class="sourceCode cell-code" id="cb53" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb53-1"><span class="fu" style="color: #4758AB;">any</span>(vec_3 <span class="sc" style="color: #5E5E5E;">&lt;</span> vec_4)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] TRUE</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb55" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb55-1"><span class="fu" style="color: #4758AB;">all</span>(vec_3 <span class="sc" style="color: #5E5E5E;">&gt;</span> vec_4)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] FALSE</code></pre>
</div>
<div class="sourceCode cell-code" id="cb57" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb57-1"><span class="fu" style="color: #4758AB;">all</span>(vec_3 <span class="sc" style="color: #5E5E5E;">&lt;</span> vec_4)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] FALSE</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb59" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb59-1"><span class="fu" style="color: #4758AB;">length</span>(vec_3)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 10</code></pre>
</div>
<div class="sourceCode cell-code" id="cb61" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb61-1"><span class="fu" style="color: #4758AB;">length</span>(vec_4)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 10</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb63" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb63-1"><span class="fu" style="color: #4758AB;">typeof</span>(vec_3)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "integer"</code></pre>
</div>
<div class="sourceCode cell-code" id="cb65" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb65-1"><span class="fu" style="color: #4758AB;">typeof</span>(vec_4)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "integer"</code></pre>
</div>
</div>
<p>Determine the number of letters in a character</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb67" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb67-1">vec_5 <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="st" style="color: #20794D;">"R"</span>, <span class="st" style="color: #20794D;">"RStudio"</span>, <span class="st" style="color: #20794D;">"Shiny"</span>, <span class="st" style="color: #20794D;">"Quarto"</span>)</span>
<span id="cb67-2"><span class="fu" style="color: #4758AB;">nchar</span>(vec_5)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 1 7 5 6</code></pre>
</div>
</div>
</section>
</section>
<section id="recycling-of-vectors" class="level2">
<h2 class="anchored" data-anchor-id="recycling-of-vectors">Recycling of vectors</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb69" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb69-1">vec_3 <span class="sc" style="color: #5E5E5E;">+</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="dv" style="color: #AD0000;">10</span>, <span class="dv" style="color: #AD0000;">20</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code> [1] 15 26 17 28 19 30 21 32 23 34</code></pre>
</div>
<div class="sourceCode cell-code" id="cb71" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb71-1">vec_3 <span class="sc" style="color: #5E5E5E;">+</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="dv" style="color: #AD0000;">10</span>, <span class="dv" style="color: #AD0000;">20</span>, <span class="dv" style="color: #AD0000;">30</span>) <span class="co" style="color: #5E5E5E;"># will result in a warning as the longer vector is not a multiple of the shorter one</span></span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>Warning in vec_3 + c(10, 20, 30): longer object length is not a multiple of
shorter object length</code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code> [1] 15 26 37 18 29 40 21 32 43 24</code></pre>
</div>
</div>
</section>
<section id="accessing-elements-of-a-vector" class="level2">
<h2 class="anchored" data-anchor-id="accessing-elements-of-a-vector">Accessing elements of a vector</h2>
<p>To access the elements of a vector, we can use numeric-, character-, or logical-based indexing.</p>
<section id="examples-1" class="level3">
<h3 class="anchored" data-anchor-id="examples-1">Examples</h3>
<section id="name-the-columns-of-a-vector-with-names." class="level4">
<h4 class="anchored" data-anchor-id="name-the-columns-of-a-vector-with-names.">1. Name the columns of a vector with <code>names()</code>.</h4>
<p>Create the vector.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb74" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb74-1">vec_name <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="dv" style="color: #AD0000;">1</span><span class="sc" style="color: #5E5E5E;">:</span><span class="dv" style="color: #AD0000;">5</span></span>
<span id="cb74-2">vec_name</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 1 2 3 4 5</code></pre>
</div>
</div>
<p>Name the individual elements.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb76" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb76-1"><span class="fu" style="color: #4758AB;">names</span>(vec_name) <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="st" style="color: #20794D;">"a"</span>, <span class="st" style="color: #20794D;">"c"</span>, <span class="st" style="color: #20794D;">"e"</span>, <span class="st" style="color: #20794D;">"g"</span>, <span class="st" style="color: #20794D;">"i"</span>)</span>
<span id="cb76-2">vec_name</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>a c e g i 
1 2 3 4 5 </code></pre>
</div>
</div>
</section>
<section id="use-the-vector-index-to-filter" class="level4">
<h4 class="anchored" data-anchor-id="use-the-vector-index-to-filter">2. Use the vector index to filter</h4>
<div class="cell">
<div class="sourceCode cell-code" id="cb78" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb78-1">vec_index <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="dv" style="color: #AD0000;">1</span><span class="sc" style="color: #5E5E5E;">:</span><span class="dv" style="color: #AD0000;">5</span></span>
<span id="cb78-2">vec_index</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 1 2 3 4 5</code></pre>
</div>
</div>
<section id="a-logical-vector-as-an-index" class="level5">
<h5 class="anchored" data-anchor-id="a-logical-vector-as-an-index">a) Logical vector as an index</h5>
<div class="cell">
<div class="sourceCode cell-code" id="cb80" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb80-1">vec_index[<span class="fu" style="color: #4758AB;">c</span>(<span class="cn" style="color: #8f5902;">TRUE</span>, <span class="cn" style="color: #8f5902;">FALSE</span>, <span class="cn" style="color: #8f5902;">TRUE</span>, <span class="cn" style="color: #8f5902;">FALSE</span>, <span class="cn" style="color: #8f5902;">TRUE</span>)]</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 1 3 5</code></pre>
</div>
</div>
</section>
<section id="b-filter-vector-based-on-an-index" class="level5">
<h5 class="anchored" data-anchor-id="b-filter-vector-based-on-an-index">b) Filter vector based on an index</h5>
<div class="cell">
<div class="sourceCode cell-code" id="cb82" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb82-1">vec_index[<span class="dv" style="color: #AD0000;">1</span><span class="sc" style="color: #5E5E5E;">:</span><span class="dv" style="color: #AD0000;">3</span>]</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 1 2 3</code></pre>
</div>
</div>
</section>
<section id="c-access-a-vector-using-its-position" class="level5">
<h5 class="anchored" data-anchor-id="c-access-a-vector-using-its-position">c) Access a vector using its position</h5>
<div class="cell">
<div class="sourceCode cell-code" id="cb84" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb84-1">vec_index[<span class="dv" style="color: #AD0000;">4</span>]</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 4</code></pre>
</div>
<div class="sourceCode cell-code" id="cb86" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb86-1">vec_index[<span class="fu" style="color: #4758AB;">c</span>(<span class="dv" style="color: #AD0000;">2</span>,<span class="dv" style="color: #AD0000;">4</span>)]</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 2 4</code></pre>
</div>
</div>
</section>
<section id="d-modify-a-vector-using-indexing" class="level5">
<h5 class="anchored" data-anchor-id="d-modify-a-vector-using-indexing">d) Modify a vector using indexing</h5>
<div class="cell">
<div class="sourceCode cell-code" id="cb88" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb88-1">vec_index</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 1 2 3 4 5</code></pre>
</div>
<div class="sourceCode cell-code" id="cb90" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb90-1">vec_index[<span class="dv" style="color: #AD0000;">5</span>] <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="dv" style="color: #AD0000;">1000</span></span>
<span id="cb90-2">vec_index</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1]    1    2    3    4 1000</code></pre>
</div>
</div>


</section>
</section>
</section>
</section>

 ]]></description>
  <category>RStudio</category>
  <category>R</category>
  <category>Tutorial</category>
  <category>Blog</category>
  <guid>https://williamokech.netlify.app/posts/series_1/new_post_6/post_6.html</guid>
  <pubDate>Fri, 11 Nov 2022 21:00:00 GMT</pubDate>
  <media:content url="https://williamokech.netlify.app/posts/series_1/new_post_6/r_and_rstudio.png" medium="image" type="image/png" height="26" width="144"/>
</item>
<item>
  <title>The Basics of R and RStudio</title>
  <dc:creator>William Okech</dc:creator>
  <link>https://williamokech.netlify.app/posts/series_1/new_post_5/post_5.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<p>R has many different types of operators that can perform different tasks.</p>
<p>Here we will focus on 5 major types of operators. The major types of operators are:</p>
<ol type="1">
<li><p>Arithmetic,</p></li>
<li><p>Relational,</p></li>
<li><p>Logical,</p></li>
<li><p>Assignment, and</p></li>
<li><p>Miscellaneous.</p></li>
</ol>
</section>
<section id="arithmetic-operators" class="level2">
<h2 class="anchored" data-anchor-id="arithmetic-operators">1. Arithmetic Operators</h2>
<p>Arithmetic operators are used to perform mathematical operations. These operators have been highlighted in <a href="../../../posts/series_1/new_post_2/post_2.html">Part 1</a> of the series.</p>
</section>
<section id="relational-operators" class="level2">
<h2 class="anchored" data-anchor-id="relational-operators">2. Relational Operators</h2>
<p>Relational operators are used to find the relationship between 2 variables and compare objects. The output of these comparisons is Boolean (<code>TRUE</code> or <code>FALSE</code>). The table below describes the most common relational operators.</p>
<table class="table">
<thead>
<tr class="header">
<th style="text-align: center;">Relational Operator</th>
<th style="text-align: center;">Description</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">&lt;</td>
<td style="text-align: center;">Less than</td>
</tr>
<tr class="even">
<td style="text-align: center;">&gt;</td>
<td style="text-align: center;">Greater than</td>
</tr>
<tr class="odd">
<td style="text-align: center;">&lt;=</td>
<td style="text-align: center;">Less than or equal to</td>
</tr>
<tr class="even">
<td style="text-align: center;">&gt;=</td>
<td style="text-align: center;">Greater than or equal to</td>
</tr>
<tr class="odd">
<td style="text-align: center;">==</td>
<td style="text-align: center;">Equal to</td>
</tr>
<tr class="even">
<td style="text-align: center;">!=</td>
<td style="text-align: center;">Not Equal to</td>
</tr>
</tbody>
</table>
<p>Assign values to variables</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">x <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="dv" style="color: #AD0000;">227</span></span>
<span id="cb1-2">y <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="dv" style="color: #AD0000;">639</span></span></code></pre></div>
</div>
<section id="a.-less-than" class="level3">
<h3 class="anchored" data-anchor-id="a.-less-than">a. Less than</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">x <span class="sc" style="color: #5E5E5E;">&lt;</span> y</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] TRUE</code></pre>
</div>
</div>
</section>
<section id="b.-greater-than" class="level3">
<h3 class="anchored" data-anchor-id="b.-greater-than">b. Greater than</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">x <span class="sc" style="color: #5E5E5E;">&gt;</span> y</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] FALSE</code></pre>
</div>
</div>
</section>
<section id="c.-less-than-or-equal-to" class="level3">
<h3 class="anchored" data-anchor-id="c.-less-than-or-equal-to">c.&nbsp;Less than or equal to</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">x <span class="sc" style="color: #5E5E5E;">&lt;=</span> <span class="dv" style="color: #AD0000;">300</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] TRUE</code></pre>
</div>
</div>
</section>
<section id="d.-greater-than-or-equal-to" class="level3">
<h3 class="anchored" data-anchor-id="d.-greater-than-or-equal-to">d.&nbsp;Greater than or equal to</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1">y <span class="sc" style="color: #5E5E5E;">&gt;=</span> <span class="dv" style="color: #AD0000;">700</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] FALSE</code></pre>
</div>
</div>
</section>
<section id="e.-equal-to" class="level3">
<h3 class="anchored" data-anchor-id="e.-equal-to">e. Equal to</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1">y <span class="sc" style="color: #5E5E5E;">==</span> <span class="dv" style="color: #AD0000;">639</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] TRUE</code></pre>
</div>
</div>
</section>
<section id="f.-not-equal-to" class="level3">
<h3 class="anchored" data-anchor-id="f.-not-equal-to">f.&nbsp;Not Equal to</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1">x <span class="sc" style="color: #5E5E5E;">!=</span> <span class="dv" style="color: #AD0000;">227</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] FALSE</code></pre>
</div>
</div>
</section>
</section>
<section id="logical-operators" class="level2">
<h2 class="anchored" data-anchor-id="logical-operators">3. Logical Operators</h2>
<p>Logical operators are used to specify multiple conditions between objects. Logical operators work with basic data types such as logical, numeric, and complex data types. This returns <code>TRUE</code> or <code>FALSE</code> values. Numbers greater that <code>1</code> are <code>TRUE</code> and <code>0</code> equals <code>FALSE</code>. The table below describes the most common logical operators.</p>
<table class="table">
<thead>
<tr class="header">
<th style="text-align: center;">Logical Operator</th>
<th style="text-align: center;">Description</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">!</td>
<td style="text-align: center;">Logical NOT</td>
</tr>
<tr class="even">
<td style="text-align: center;">|</td>
<td style="text-align: center;">Element-wise logical OR</td>
</tr>
<tr class="odd">
<td style="text-align: center;">||</td>
<td style="text-align: center;">Logical OR</td>
</tr>
<tr class="even">
<td style="text-align: center;">&amp;</td>
<td style="text-align: center;">Element-wise logical AND</td>
</tr>
<tr class="odd">
<td style="text-align: center;">&amp;&amp;</td>
<td style="text-align: center;">Logical AND</td>
</tr>
</tbody>
</table>
<p>Assign vectors to variables</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1">vector_1 <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="dv" style="color: #AD0000;">0</span>,<span class="dv" style="color: #AD0000;">2</span>)</span>
<span id="cb14-2">vector_2 <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="dv" style="color: #AD0000;">1</span>,<span class="dv" style="color: #AD0000;">0</span>)</span></code></pre></div>
</div>
<section id="a.-logical-not" class="level3">
<h3 class="anchored" data-anchor-id="a.-logical-not">a. Logical NOT</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1"><span class="sc" style="color: #5E5E5E;">!</span>vector_1</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1]  TRUE FALSE</code></pre>
</div>
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb17-1"><span class="sc" style="color: #5E5E5E;">!</span>vector_2</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] FALSE  TRUE</code></pre>
</div>
</div>
</section>
<section id="b.-logical-or" class="level3">
<h3 class="anchored" data-anchor-id="b.-logical-or">b. Logical OR</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb19-1">vector_1 <span class="sc" style="color: #5E5E5E;">|</span> vector_2</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] TRUE TRUE</code></pre>
</div>
</div>
</section>
<section id="c.-logical-and" class="level3">
<h3 class="anchored" data-anchor-id="c.-logical-and">c.&nbsp;Logical AND</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb21-1">vector_1 <span class="sc" style="color: #5E5E5E;">&amp;</span> vector_2</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] FALSE FALSE</code></pre>
</div>
</div>
</section>
<section id="d.-element-wise-logical-or" class="level3">
<h3 class="anchored" data-anchor-id="d.-element-wise-logical-or">d.&nbsp;Element-wise logical OR</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb23-1">vector_1 <span class="sc" style="color: #5E5E5E;">||</span> vector_2</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>Warning in vector_1 || vector_2: 'length(x) = 2 &gt; 1' in coercion to 'logical(1)'

Warning in vector_1 || vector_2: 'length(x) = 2 &gt; 1' in coercion to 'logical(1)'</code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] TRUE</code></pre>
</div>
</div>
</section>
<section id="d.-element-wise-logical-and" class="level3">
<h3 class="anchored" data-anchor-id="d.-element-wise-logical-and">d.&nbsp;Element-wise logical AND</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb26-1">vector_1 <span class="sc" style="color: #5E5E5E;">&amp;&amp;</span> vector_2</span></code></pre></div>
<div class="cell-output cell-output-stderr">
<pre><code>Warning in vector_1 &amp;&amp; vector_2: 'length(x) = 2 &gt; 1' in coercion to 'logical(1)'</code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] FALSE</code></pre>
</div>
</div>
</section>
</section>
<section id="assignment-operators" class="level2">
<h2 class="anchored" data-anchor-id="assignment-operators">4. Assignment Operators</h2>
<p>These operators assign values to variables. A more comprehensive review can be obtained in <a href="../../../posts/series_1/new_post_3/post_3.html">Part 2</a> of the series.</p>
</section>
<section id="miscellaneous-operators" class="level2">
<h2 class="anchored" data-anchor-id="miscellaneous-operators">5. Miscellaneous Operators</h2>
<p>These are helpful operators for working in that can perform a variety of functions. A few common miscellaneous operators are described below.</p>
<table class="table">
<colgroup>
<col style="width: 27%">
<col style="width: 72%">
</colgroup>
<thead>
<tr class="header">
<th style="text-align: center;">Miscellaneous Operator</th>
<th style="text-align: center;">Description</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">%*%</td>
<td style="text-align: center;">Matrix multiplication (to be discussed in subsequent chapters)</td>
</tr>
<tr class="even">
<td style="text-align: center;">%in%</td>
<td style="text-align: center;">Does an element belong to a vector</td>
</tr>
<tr class="odd">
<td style="text-align: center;">:</td>
<td style="text-align: center;">Generate a sequence</td>
</tr>
</tbody>
</table>
<section id="a.-sequence" class="level3">
<h3 class="anchored" data-anchor-id="a.-sequence">a. Sequence</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb29-1">a <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="dv" style="color: #AD0000;">1</span><span class="sc" style="color: #5E5E5E;">:</span><span class="dv" style="color: #AD0000;">8</span></span>
<span id="cb29-2">a</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 1 2 3 4 5 6 7 8</code></pre>
</div>
<div class="sourceCode cell-code" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb31-1">b <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="dv" style="color: #AD0000;">4</span><span class="sc" style="color: #5E5E5E;">:</span><span class="dv" style="color: #AD0000;">10</span></span>
<span id="cb31-2">b</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1]  4  5  6  7  8  9 10</code></pre>
</div>
</div>
</section>
<section id="b.-element-in-a-vector" class="level3">
<h3 class="anchored" data-anchor-id="b.-element-in-a-vector">b. Element in a vector</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb33-1">a <span class="sc" style="color: #5E5E5E;">%in%</span> b</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE</code></pre>
</div>
<div class="sourceCode cell-code" id="cb35" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb35-1"><span class="dv" style="color: #AD0000;">9</span> <span class="sc" style="color: #5E5E5E;">%in%</span> b</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] TRUE</code></pre>
</div>
<div class="sourceCode cell-code" id="cb37" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb37-1"><span class="dv" style="color: #AD0000;">9</span> <span class="sc" style="color: #5E5E5E;">%in%</span> a</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] FALSE</code></pre>
</div>
</div>


</section>
</section>

 ]]></description>
  <category>RStudio</category>
  <category>R</category>
  <category>Tutorial</category>
  <category>Blog</category>
  <guid>https://williamokech.netlify.app/posts/series_1/new_post_5/post_5.html</guid>
  <pubDate>Tue, 08 Nov 2022 21:00:00 GMT</pubDate>
  <media:content url="https://williamokech.netlify.app/posts/series_1/new_post_5/r_and_rstudio.png" medium="image" type="image/png" height="26" width="144"/>
</item>
<item>
  <title>Are there more men than women in Kenya?</title>
  <dc:creator>William Okech</dc:creator>
  <link>https://williamokech.netlify.app/posts/series_2/new_post_1/post_1.html</link>
  <description><![CDATA[ 




<p>To answer this question, I reviewed the Kenya Population and Housing Census (2019)<sup>1</sup><sup>2</sup> report, which provides data on population by sex and age at the county and sub-county levels. This analysis was inspired by Rose Mintzer-Sweeney’s article “Sex and the Census,” published on the Datawrapper website <sup>3</sup>.</p>
<p>Various biological, cultural, public health, and economic factors can influence the global human sex ratio. For instance, at birth, the human sex ratio is “male-biased,” with approximately 105 males born per 100 girls. However, with increasing age, the susceptibility to infectious diseases, sex-selective abortions, and higher life expectancies for women can cause fluctuations in the human sex ratio<sup>4</sup>. The total Kenyan population in 2019 (according to the census) was 47,564,296. When I compared the number of males to females at the national level (Figure 1), I found that there were 98 males for every 100 females in the country<sup>5</sup>.</p>
<p><img src="https://williamokech.netlify.app/posts/series_2/new_post_1/images/national_sex_ratio.png" class="img-fluid"></p>
<p>Knowing there were more females than males, I sought to determine whether these differences persisted across all age groups (Figure 2).</p>
<p><img src="https://williamokech.netlify.app/posts/series_2/new_post_1/images/age_sex_ratio.png" class="img-fluid"></p>
<p>As expected, I observed a higher number of males compared with females between 0 to 18 years. One reason could be the higher male-to-female ratio seen at birth globally<sup>6</sup>. Between the ages of 19 to 34 years, the male-to-female ratio decreases rapidly, while from 35 to 56 years, the ratio increases rapidly. The cause of this fluctuation is not apparent, but various public health factors may be responsible for the shifts observed within these age groups. Finally, the number of males compared with females steadily decreases after age 60. One reason for this could be the prevalence of medical conditions that disproportionately affect men. Additionally, the decrease in the number of males to females could result from increases in life expectancy favoring women, as demonstrated by the Economic Survey 2022, which shows that the male life expectancy is 60.6 vs.&nbsp;66.5 for females<sup>7</sup>.</p>
<p>By focusing on the national human sex ratio, we may assume that the male-to-female ratio across all the regions in Kenya is equal. Kenya has 47 diverse counties with different population densities, climatic conditions, economic opportunities, and levels of development. Not surprisingly, we find (Figure 3) that there is a wide range of human sex ratios (90–120 males per 100 females) across the different counties (administrative units).</p>
<p><img src="https://williamokech.netlify.app/posts/series_2/new_post_1/images/barplot_map.png" class="img-fluid"></p>
<p>The highest sex ratio is found in Garissa county (120 males per 100 females), and the lowest is observed in Siaya county (90 males per 100 females). Many counties with low sex ratios (more females) are primarily located in the west of Kenya, and counties with high sex ratios (more males) are found in the north of Kenya. According to the Economic Survey (2022) [^8], male life expectancy in the west of Kenya is the lowest in the country. Homa Bay and Migori recorded a life expectancy of 50.5 years, which was approximately 10 years lower than that of females in the respective counties. This is against a difference of 3 to 5 years lower for males in some of the counties in the north of Kenya.</p>
<p>Within each of Kenya’s 47 counties are smaller administrative units known as sub-counties. For the final analysis, I thought it would be interesting to see whether the patterns observed at the county level were consistent across the various sub-counties.</p>
<p><img src="https://williamokech.netlify.app/posts/series_2/new_post_1/images/top_bottom_plot.png" class="img-fluid"></p>
<p>Having just observed that counties in the north of Kenya had the highest number of males per 100 females, I was surprised to find that Mandera Central (Mandera County) and Tarbaj (Wajir County) sub-counties in the north were among the sub-counties with the lowest number of males per 100 females (Figure 4). Why females tend to concentrate within specific regions in these two counties may be an interesting aspect to investigate in future studies.</p>
<p>Overall, many factors may affect the human sex ratio at the county and sub-county levels and cause the differences in the human sex ratio seen with age. High rural-urban migration, public health factors (including the prevalence of various communicable and non-communicable diseases), climate, and location’s primary source of employment may skew the number of males to females in certain sub-counties. Therefore, future investigations should focus on the causes of these variations in the human sex ratio and the implications for administrative planning at the national, county, and sub-county levels.</p>
<section id="section" class="level2">
<h2 class="anchored" data-anchor-id="section"></h2>


</section>


<div id="quarto-appendix" class="default"><section class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>Kenya National Bureau of Statistics. The 2019 Kenya Population and Housing Census. Volume I: Population by County and Sub-County and Volume III: Distribution of Population by Age and Sex.↩︎</p></li>
<li id="fn2"><p>Shelmith Kariuki (2020). rKenyaCensus: 2019 Kenya Population and Housing Census Results. R package version 0.0.2.↩︎</p></li>
<li id="fn3"><p>Rose Mintzer-Sweeney’s article: https://blog.datawrapper.de/gender-ratio-american-history/↩︎</p></li>
<li id="fn4"><p>Hannah Ritchie and Max Roser (2019) - “Gender Ratio.” Published online at OurWorldInData.org. Retrieved from: ‘https://ourworldindata.org/gender-ratio’ [Online Resource]↩︎</p></li>
<li id="fn5"><p>Additionally, there were also 1,524 individuals classified as intersex, but their low numbers prevented their inclusion in the analysis.↩︎</p></li>
<li id="fn6"><p>Hannah Ritchie and Max Roser (2019) - “Gender Ratio.” Published online at OurWorldInData.org. Retrieved from: ‘https://ourworldindata.org/gender-ratio’ [Online Resource]↩︎</p></li>
<li id="fn7"><p>Kenya National Bureau of Statistics. The Economic Survey 2022↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>RStudio</category>
  <category>R</category>
  <category>Data Stories</category>
  <category>Blog</category>
  <category>Kenya Census</category>
  <guid>https://williamokech.netlify.app/posts/series_2/new_post_1/post_1.html</guid>
  <pubDate>Wed, 29 Jun 2022 21:00:00 GMT</pubDate>
  <media:content url="https://williamokech.netlify.app/posts/series_2/new_post_1/male-female-ratio.png" medium="image" type="image/png" height="133" width="144"/>
</item>
<item>
  <title>The Basics of R and RStudio</title>
  <dc:creator>William Okech</dc:creator>
  <link>https://williamokech.netlify.app/posts/series_1/new_post_4/post_4.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<p>R and RStudio utilize multiple data types to store different kinds of data.</p>
<p>The most common data types in R are listed below.</p>
<table class="table">
<colgroup>
<col style="width: 7%">
<col style="width: 92%">
</colgroup>
<thead>
<tr class="header">
<th><strong>Data Type</strong></th>
<th><strong>Description</strong></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Numeric</td>
<td>The most common data type. The values can be numbers or decimals (all real numbers).</td>
</tr>
<tr class="even">
<td>Integer</td>
<td>Special case of numeric data without decimals.</td>
</tr>
<tr class="odd">
<td>Logical</td>
<td>Boolean data type with only 2 values (<code>TRUE</code> or <code>FALSE</code>).</td>
</tr>
<tr class="even">
<td>Complex</td>
<td>Specifies imaginary values in R.</td>
</tr>
<tr class="odd">
<td>Character</td>
<td>Assigns a character or string to a variable. The character variables are enclosed in single quotes (‘character’) while the string variables are enclosed in double quotes (“string”).</td>
</tr>
<tr class="even">
<td>Factor</td>
<td>Special type of character variable that represents a categorical such as gender.</td>
</tr>
<tr class="odd">
<td>Raw</td>
<td>Specifies values as raw bytes. It uses built-in functions to convert between raw and character (charToRaw() or rawToChar()).</td>
</tr>
<tr class="even">
<td>Dates</td>
<td>Specifies the date variable. Date stores a date and POSIXct stores a date and time. The output is indicated as the number of days (Date) or number of seconds (POSIXct) since 01/01/1970.</td>
</tr>
</tbody>
</table>
</section>
<section id="data-types" class="level2">
<h2 class="anchored" data-anchor-id="data-types">Data types</h2>
<section id="numeric" class="level3">
<h3 class="anchored" data-anchor-id="numeric">1. Numeric</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fl" style="color: #AD0000;">89.98</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 89.98</code></pre>
</div>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="dv" style="color: #AD0000;">55</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 55</code></pre>
</div>
</div>
</section>
<section id="integer" class="level3">
<h3 class="anchored" data-anchor-id="integer">2. Integer</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">5L</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 5</code></pre>
</div>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">5768L</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 5768</code></pre>
</div>
</div>
</section>
<section id="logical" class="level3">
<h3 class="anchored" data-anchor-id="logical">3. Logical</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="cn" style="color: #8f5902;">TRUE</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] TRUE</code></pre>
</div>
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1"><span class="cn" style="color: #8f5902;">FALSE</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] FALSE</code></pre>
</div>
</div>
</section>
<section id="complex" class="level3">
<h3 class="anchored" data-anchor-id="complex">4. Complex</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1"><span class="dv" style="color: #AD0000;">10</span> <span class="sc" style="color: #5E5E5E;">+</span> 30i</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 10+30i</code></pre>
</div>
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1"><span class="dv" style="color: #AD0000;">287</span> <span class="sc" style="color: #5E5E5E;">+</span> 34i</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 287+34i</code></pre>
</div>
</div>
</section>
<section id="character-or-string" class="level3">
<h3 class="anchored" data-anchor-id="character-or-string">5. Character or String</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb17-1"><span class="st" style="color: #20794D;">'abc'</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "abc"</code></pre>
</div>
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb19-1"><span class="st" style="color: #20794D;">"def"</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "def"</code></pre>
</div>
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb21-1"><span class="st" style="color: #20794D;">"I like learning R"</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "I like learning R"</code></pre>
</div>
</div>
</section>
<section id="dates" class="level3">
<h3 class="anchored" data-anchor-id="dates">6. Dates</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb23-1"><span class="st" style="color: #20794D;">"2022-06-23 14:39:21 EAT"</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "2022-06-23 14:39:21 EAT"</code></pre>
</div>
<div class="sourceCode cell-code" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb25-1"><span class="st" style="color: #20794D;">"2022-06-23"</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "2022-06-23"</code></pre>
</div>
</div>
</section>
</section>
<section id="examining-various-data-types" class="level2">
<h2 class="anchored" data-anchor-id="examining-various-data-types">Examining various data types</h2>
<p>Several functions exist to examine the features of the various data types. These include:</p>
<ol type="1">
<li><code>typeof()</code> – what is the data type of the object (low-level)?</li>
<li><code>class()</code> – what is the data type of the object (high-level)?</li>
<li><code>length()</code> – how long is the object?</li>
<li><code>attributes()</code> – any metadata available?</li>
</ol>
<p>Let’s look at how these functions work with a few examples</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb27-1">a <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fl" style="color: #AD0000;">45.84</span></span>
<span id="cb27-2">b <span class="ot" style="color: #003B4F;">&lt;-</span> 858L</span>
<span id="cb27-3">c <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="cn" style="color: #8f5902;">TRUE</span></span>
<span id="cb27-4">d <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="dv" style="color: #AD0000;">89</span> <span class="sc" style="color: #5E5E5E;">+</span> 34i</span>
<span id="cb27-5">e <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="st" style="color: #20794D;">'abc'</span></span></code></pre></div>
</div>
<section id="examine-the-data-type-at-a-low-level-with-typeof" class="level3">
<h3 class="anchored" data-anchor-id="examine-the-data-type-at-a-low-level-with-typeof">1. Examine the data type at a low-level with <code>typeof()</code></h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb28-1"><span class="fu" style="color: #4758AB;">typeof</span>(a)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "double"</code></pre>
</div>
<div class="sourceCode cell-code" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb30-1"><span class="fu" style="color: #4758AB;">typeof</span>(b)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "integer"</code></pre>
</div>
<div class="sourceCode cell-code" id="cb32" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb32-1"><span class="fu" style="color: #4758AB;">typeof</span>(c)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "logical"</code></pre>
</div>
<div class="sourceCode cell-code" id="cb34" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb34-1"><span class="fu" style="color: #4758AB;">typeof</span>(d)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "complex"</code></pre>
</div>
<div class="sourceCode cell-code" id="cb36" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb36-1"><span class="fu" style="color: #4758AB;">typeof</span>(e)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "character"</code></pre>
</div>
</div>
</section>
<section id="examine-the-data-type-at-a-high-level-with-class" class="level3">
<h3 class="anchored" data-anchor-id="examine-the-data-type-at-a-high-level-with-class">2. Examine the data type at a high-level with <code>class()</code></h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb38" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb38-1"><span class="fu" style="color: #4758AB;">class</span>(a)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "numeric"</code></pre>
</div>
<div class="sourceCode cell-code" id="cb40" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb40-1"><span class="fu" style="color: #4758AB;">class</span>(b)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "integer"</code></pre>
</div>
<div class="sourceCode cell-code" id="cb42" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb42-1"><span class="fu" style="color: #4758AB;">class</span>(c)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "logical"</code></pre>
</div>
<div class="sourceCode cell-code" id="cb44" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb44-1"><span class="fu" style="color: #4758AB;">class</span>(d)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "complex"</code></pre>
</div>
<div class="sourceCode cell-code" id="cb46" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb46-1"><span class="fu" style="color: #4758AB;">class</span>(e)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "character"</code></pre>
</div>
</div>
</section>
<section id="use-the-is.____-functions-to-determine-the-data-type" class="level3">
<h3 class="anchored" data-anchor-id="use-the-is.____-functions-to-determine-the-data-type">3. Use the <code>is.____()</code> functions to determine the data type</h3>
<p>To test whether the variable is of a specific type, we can use the <code>is.____()</code> functions.</p>
<p>First, we test the variable <code>a</code> which is numeric.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb48" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb48-1"><span class="fu" style="color: #4758AB;">is.numeric</span>(a)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] TRUE</code></pre>
</div>
<div class="sourceCode cell-code" id="cb50" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb50-1"><span class="fu" style="color: #4758AB;">is.integer</span>(a)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] FALSE</code></pre>
</div>
<div class="sourceCode cell-code" id="cb52" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb52-1"><span class="fu" style="color: #4758AB;">is.logical</span>(a)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] FALSE</code></pre>
</div>
<div class="sourceCode cell-code" id="cb54" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb54-1"><span class="fu" style="color: #4758AB;">is.character</span>(a)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] FALSE</code></pre>
</div>
</div>
<p>Second, we test the variable <code>c</code> which is logical.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb56" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb56-1"><span class="fu" style="color: #4758AB;">is.numeric</span>(c)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] FALSE</code></pre>
</div>
<div class="sourceCode cell-code" id="cb58" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb58-1"><span class="fu" style="color: #4758AB;">is.integer</span>(c)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] FALSE</code></pre>
</div>
<div class="sourceCode cell-code" id="cb60" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb60-1"><span class="fu" style="color: #4758AB;">is.logical</span>(c)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] TRUE</code></pre>
</div>
<div class="sourceCode cell-code" id="cb62" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb62-1"><span class="fu" style="color: #4758AB;">is.character</span>(c)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] FALSE</code></pre>
</div>
</div>
</section>
</section>
<section id="converting-between-various-data-types" class="level2">
<h2 class="anchored" data-anchor-id="converting-between-various-data-types">Converting between various data types</h2>
<p>To convert between data types we can use the <code>as.____()</code> functions. These include: <code>as.Date()</code>, <code>as.numeric()</code>, and <code>as.factor()</code>. Additionally, other helpful functions include factor() which adds levels to the data and <code>nchar()</code> which provides the length of the data.</p>
<section id="examples" class="level3">
<h3 class="anchored" data-anchor-id="examples">Examples</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb64" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb64-1"><span class="fu" style="color: #4758AB;">as.integer</span>(a)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 45</code></pre>
</div>
<div class="sourceCode cell-code" id="cb66" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb66-1"><span class="fu" style="color: #4758AB;">as.logical</span>(<span class="dv" style="color: #AD0000;">0</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] FALSE</code></pre>
</div>
<div class="sourceCode cell-code" id="cb68" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb68-1"><span class="fu" style="color: #4758AB;">as.logical</span>(<span class="dv" style="color: #AD0000;">1</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] TRUE</code></pre>
</div>
<div class="sourceCode cell-code" id="cb70" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb70-1"><span class="fu" style="color: #4758AB;">nchar</span>(e)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 3</code></pre>
</div>
</div>


</section>
</section>

 ]]></description>
  <category>RStudio</category>
  <category>R</category>
  <category>Tutorial</category>
  <category>Blog</category>
  <guid>https://williamokech.netlify.app/posts/series_1/new_post_4/post_4.html</guid>
  <pubDate>Wed, 22 Jun 2022 21:00:00 GMT</pubDate>
  <media:content url="https://williamokech.netlify.app/posts/series_1/new_post_4/r_and_rstudio.png" medium="image" type="image/png" height="26" width="144"/>
</item>
<item>
  <title>The Basics of R and RStudio</title>
  <dc:creator>William Okech</dc:creator>
  <link>https://williamokech.netlify.app/posts/series_1/new_post_3/post_3.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<p>Variables are instrumental in programming because they are used as “containers” to store data values.</p>
<p>To assign a value to a variable, we can use <code>&lt;−</code> or <code>=</code>. However, most R users prefer to use <code>&lt;−</code>.</p>
</section>
<section id="variable-assignment" class="level2">
<h2 class="anchored" data-anchor-id="variable-assignment">Variable assignment</h2>
<section id="using--" class="level3">
<h3 class="anchored" data-anchor-id="using--">1. Using <code>&lt;-</code></h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">variable_1 <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="dv" style="color: #AD0000;">5</span></span>
<span id="cb1-2">variable_1</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 5</code></pre>
</div>
</div>
</section>
<section id="using" class="level3">
<h3 class="anchored" data-anchor-id="using">2. Using <code>=</code></h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">variable_2 <span class="ot" style="color: #003B4F;">=</span> <span class="dv" style="color: #AD0000;">10</span></span>
<span id="cb3-2">variable_2</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 10</code></pre>
</div>
</div>
</section>
<section id="reverse-the-value-and-variable-with--" class="level3">
<h3 class="anchored" data-anchor-id="reverse-the-value-and-variable-with--">3. Reverse the value and variable with <code>-&gt;</code></h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="dv" style="color: #AD0000;">15</span> <span class="ot" style="color: #003B4F;">-&gt;</span> variable_3</span>
<span id="cb5-2">variable_3</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 15</code></pre>
</div>
</div>
</section>
<section id="assign-two-variables-to-one-value" class="level3">
<h3 class="anchored" data-anchor-id="assign-two-variables-to-one-value">4. Assign two variables to one value</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">variable_4 <span class="ot" style="color: #003B4F;">&lt;-</span> variable_5 <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="dv" style="color: #AD0000;">30</span></span>
<span id="cb7-2">variable_4</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 30</code></pre>
</div>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">variable_5</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 30</code></pre>
</div>
</div>
</section>
</section>
<section id="variable-output" class="level2">
<h2 class="anchored" data-anchor-id="variable-output">Variable output</h2>
<p>The output of the variable can then be obtained by:</p>
<ol type="1">
<li>Typing the variable name and then pressing “Enter,”</li>
<li>Typing “print” with the variable name in brackets, <code>print(variable)</code>, and</li>
<li>Typing “View” with the variable name in brackets, <code>View(variable)</code>.</li>
</ol>
<p>Both <code>print()</code> and <code>View()</code> are some of the many built-in functions<sup>1</sup> available in R.</p>
<p>In RStudio, the list of variables that have been loaded can be viewed in the environment pane.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://williamokech.netlify.app/posts/series_1/new_post_3/env_pane_1.png" class="img-fluid figure-img" style="width:90.0%"></p>
</figure>
</div>
<p>Figure 1: A screenshot of the environment pane with the stored variables.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1"><span class="fu" style="color: #4758AB;">print</span>(variable_1)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 5</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1"><span class="fu" style="color: #4758AB;">View</span>(variable_2)</span></code></pre></div>
</div>
<p>Output of <code>View()</code> will be seen in the script pane</p>
</section>
<section id="the-assign-and-rm-functions" class="level2">
<h2 class="anchored" data-anchor-id="the-assign-and-rm-functions">The <code>assign()</code> and <code>rm()</code> functions</h2>
<p>In addition to using the assignment operators (<code>&lt;-</code> and <code>=</code>), we can use the <code>assign()</code> function to assign a value to a variable.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1"><span class="fu" style="color: #4758AB;">assign</span>(<span class="st" style="color: #20794D;">"variable_6"</span>, <span class="dv" style="color: #AD0000;">555</span>)</span>
<span id="cb14-2">variable_6</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 555</code></pre>
</div>
</div>
<p>To remove the assignment of the value to the variable, either delete the variable in the “environment pane” or use the <code>rm()</code> function.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb16-1">variable_7 <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="dv" style="color: #AD0000;">159</span></span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb17-1"><span class="fu" style="color: #4758AB;">rm</span>(variable_7)</span></code></pre></div>
</div>
<p>After running <code>rm()</code> look at the environment pane to confirm whether <code>variable_7</code> has been removed.</p>
</section>
<section id="naming-variables" class="level2">
<h2 class="anchored" data-anchor-id="naming-variables">Naming variables</h2>
<p>At this point, you may be wondering what conventions are used for naming variables. First, variables need to have meaningful names such as current_temp, time_24_hr, or weight_lbs. However, we need to be mindful of the <a href="https://web.stanford.edu/class/cs109l/unrestricted/resources/google-style.html">variable</a> <a href="http://adv-r.had.co.nz/Style.html">style guide</a> which provides us with the appropriate rules for naming variables.</p>
<p>Some rules to keep in mind are:</p>
<ol type="1">
<li>R is case-sensitive (<code>variable</code> is not the same as <code>Variable</code>),</li>
<li>Names similar to typical outputs or functions (<code>TRUE</code>, <code>FALSE</code>, <code>if</code>, or <code>else</code>) cannot be used,</li>
<li>Appropriate variable names can contain letters, numbers, dots, and underscores. However, you cannot start with an underscore, number, or dot followed by a number.</li>
</ol>
</section>
<section id="valid-and-invalid-names" class="level2">
<h2 class="anchored" data-anchor-id="valid-and-invalid-names">Valid and invalid names</h2>
<section id="valid-names" class="level3">
<h3 class="anchored" data-anchor-id="valid-names">Valid names:</h3>
<ul>
<li>time_24_hr</li>
<li>.time24_hr</li>
</ul>
</section>
<section id="invalid-names" class="level3">
<h3 class="anchored" data-anchor-id="invalid-names">Invalid names:</h3>
<ul>
<li>_24_hr.time</li>
<li>24_hr_time</li>
<li>.24_hr_time</li>
</ul>


</section>
</section>


<div id="quarto-appendix" class="default"><section class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>Functions are a collection of statements (organized and reusable code) that perform a specific task, and R has many built-in functions.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>RStudio</category>
  <category>R</category>
  <category>Tutorial</category>
  <category>Blog</category>
  <guid>https://williamokech.netlify.app/posts/series_1/new_post_3/post_3.html</guid>
  <pubDate>Tue, 21 Jun 2022 21:00:00 GMT</pubDate>
  <media:content url="https://williamokech.netlify.app/posts/series_1/new_post_3/r_and_rstudio.png" medium="image" type="image/png" height="26" width="144"/>
</item>
<item>
  <title>The Basics of R and RStudio</title>
  <dc:creator>William Okech</dc:creator>
  <link>https://williamokech.netlify.app/posts/series_1/new_post_2/post_2.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<p>This is the first in a series of blog posts looking at the basics of R and RStudio. These programs allow us to perform various basic and complex calculations.</p>
<p>To get started, first, we will open R or RStudio. In R, go to the console, and in RStudio, head to the console pane. Next, type in a basic arithmetic calculation such as “1 + 1” after the angle bracket (&gt;) and hit “Enter.”</p>
<p>An example of a basic calculation:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="dv" style="color: #AD0000;">1</span><span class="sc" style="color: #5E5E5E;">+</span><span class="dv" style="color: #AD0000;">1</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 2</code></pre>
</div>
</div>
<p>The output will be observed next to the square bracket containing the number 1 ([1]).</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://williamokech.netlify.app/posts/series_1/new_post_2/r_console_1plus1.png" class="img-fluid figure-img" style="width:90.0%"></p>
</figure>
</div>
<p>Additionally, to include comments into the code block we use the hash (#) symbol. Anything written after the code block will be commented out and not run.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;"># A simple arithmetic calculation (which is not run because of the hash symbol)</span></span>
<span id="cb3-2"><span class="dv" style="color: #AD0000;">1</span><span class="sc" style="color: #5E5E5E;">+</span><span class="dv" style="color: #AD0000;">1</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 2</code></pre>
</div>
</div>
</section>
<section id="arithmetic-operators-available-in-rrstudio" class="level2">
<h2 class="anchored" data-anchor-id="arithmetic-operators-available-in-rrstudio">Arithmetic operators available in R/RStudio</h2>
<p>Various arithmetic operators (listed below) can be used in R/RStudio.</p>
<table class="table">
<thead>
<tr class="header">
<th style="text-align: center;">Arithmetic Operator</th>
<th style="text-align: center;">Description</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">+</td>
<td style="text-align: center;">Addition</td>
</tr>
<tr class="even">
<td style="text-align: center;">-</td>
<td style="text-align: center;">Subtraction</td>
</tr>
<tr class="odd">
<td style="text-align: center;">*</td>
<td style="text-align: center;">Multiplication</td>
</tr>
<tr class="even">
<td style="text-align: center;">/</td>
<td style="text-align: center;">Division</td>
</tr>
<tr class="odd">
<td style="text-align: center;">** or ^</td>
<td style="text-align: center;">Exponentiation</td>
</tr>
<tr class="even">
<td style="text-align: center;">%%</td>
<td style="text-align: center;">Modulus (remainder after division)</td>
</tr>
<tr class="odd">
<td style="text-align: center;">%/%</td>
<td style="text-align: center;">Integer division</td>
</tr>
</tbody>
</table>
</section>
<section id="examples" class="level2">
<h2 class="anchored" data-anchor-id="examples">Examples</h2>
<section id="addition" class="level3">
<h3 class="anchored" data-anchor-id="addition">Addition</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="dv" style="color: #AD0000;">10</span><span class="sc" style="color: #5E5E5E;">+</span><span class="dv" style="color: #AD0000;">30</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 40</code></pre>
</div>
</div>
</section>
<section id="subtraction" class="level3">
<h3 class="anchored" data-anchor-id="subtraction">Subtraction</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="dv" style="color: #AD0000;">30-24</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 6</code></pre>
</div>
</div>
</section>
<section id="multiplication" class="level3">
<h3 class="anchored" data-anchor-id="multiplication">Multiplication</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="dv" style="color: #AD0000;">20</span><span class="sc" style="color: #5E5E5E;">*</span><span class="dv" style="color: #AD0000;">4</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 80</code></pre>
</div>
</div>
</section>
<section id="division" class="level3">
<h3 class="anchored" data-anchor-id="division">Division</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1"><span class="dv" style="color: #AD0000;">93</span><span class="sc" style="color: #5E5E5E;">/</span><span class="dv" style="color: #AD0000;">4</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 23.25</code></pre>
</div>
</div>
</section>
<section id="exponentiation" class="level3">
<h3 class="anchored" data-anchor-id="exponentiation">Exponentiation</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1"><span class="dv" style="color: #AD0000;">3</span><span class="sc" style="color: #5E5E5E;">^</span><span class="dv" style="color: #AD0000;">6</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 729</code></pre>
</div>
</div>
</section>
<section id="modulus-remainder-with-division" class="level3">
<h3 class="anchored" data-anchor-id="modulus-remainder-with-division">Modulus (remainder with division)</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1"><span class="dv" style="color: #AD0000;">94</span><span class="sc" style="color: #5E5E5E;">%%</span><span class="dv" style="color: #AD0000;">5</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 4</code></pre>
</div>
</div>
</section>
<section id="integer-division" class="level3">
<h3 class="anchored" data-anchor-id="integer-division">Integer Division</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb17-1"><span class="dv" style="color: #AD0000;">54</span><span class="sc" style="color: #5E5E5E;">%/%</span><span class="dv" style="color: #AD0000;">7</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 7</code></pre>
</div>
</div>
</section>
<section id="slightly-more-complex-arithmetic-operations" class="level3">
<h3 class="anchored" data-anchor-id="slightly-more-complex-arithmetic-operations">Slightly more complex arithmetic operations</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb19-1"><span class="dv" style="color: #AD0000;">5-1</span><span class="sc" style="color: #5E5E5E;">+</span>(<span class="dv" style="color: #AD0000;">4</span><span class="sc" style="color: #5E5E5E;">*</span><span class="dv" style="color: #AD0000;">3</span>)<span class="sc" style="color: #5E5E5E;">/</span><span class="dv" style="color: #AD0000;">16</span><span class="sc" style="color: #5E5E5E;">*</span><span class="dv" style="color: #AD0000;">3</span></span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 6.25</code></pre>
</div>
</div>


</section>
</section>

 ]]></description>
  <category>RStudio</category>
  <category>R</category>
  <category>Tutorial</category>
  <category>Blog</category>
  <guid>https://williamokech.netlify.app/posts/series_1/new_post_2/post_2.html</guid>
  <pubDate>Tue, 14 Jun 2022 21:00:00 GMT</pubDate>
  <media:content url="https://williamokech.netlify.app/posts/series_1/new_post_2/r_and_rstudio.png" medium="image" type="image/png" height="26" width="144"/>
</item>
<item>
  <title>Getting Started with R and RStudio</title>
  <dc:creator>William Okech</dc:creator>
  <link>https://williamokech.netlify.app/posts/series_1/new_post_1/post_1.html</link>
  <description><![CDATA[ 




<section id="welcome" class="level1">
<h1>Welcome!</h1>
<p>In this 1st post, the reader will be introduced to the R programming language and RStudio software.</p>
<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<p>This blog aims to introduce new R/RStudio users to the fundamentals of R and lay the groundwork for more in-depth statistical analysis, data visualization, and reporting methods. I hope to present the topics in a straightforward manner so that anyone new to programming is not intimidated.</p>
</section>
<section id="what-is-r" class="level2">
<h2 class="anchored" data-anchor-id="what-is-r">What is R?</h2>
<p>R is a programming language and open-source (freely available) software invented by Ross Ihaka and Robert Gentleman in 1993 (published as open-source in 1995) when they were based at the University of Auckland. <em>Fun fact: R represents the first letter of the first names of the creators</em>. The software is utilized by individuals working for various organizations ranging from academic institutions and healthcare organizations to financial services and information technology companies. In May 2022, the <a href="https://www.tiobe.com/tiobe-index/">TIOBE</a> index (a measure of programming language popularity) demonstrated that R was the 13th most popular programming language. R’s popularity may result from its highly extensible nature that allows users to perform statistical data analysis, generate visualizations, and report findings.</p>
<section id="what-are-the-benefits-of-using-r" class="level3">
<h3 class="anchored" data-anchor-id="what-are-the-benefits-of-using-r">What are the benefits of using R?</h3>
<p>As mentioned in the previous section, R is an open-source software that is highly extensible. Thousands of extensions (also known as packages) can be installed, allowing one to increase the number of available applications. The main advantages of R include: 1. A <a href="https://community.rstudio.com/">large</a> <a href="https://www.r-project.org/help.html">community</a> of <a href="https://stackoverflow.com/">users and developers</a> that can provide learning support and assist with technical challenges, 2. The ability to perform reproducible research. 3. Its cross-platform nature, which means that it can be used on Linux, Windows, and Mac operating systems. 4. The ability to generate <a href="https://r-graph-gallery.com/">high-quality</a> <a href="https://r-charts.com/">graphics</a> from datasets of varying dimensions.</p>
</section>
<section id="im-looking-for-r.-where-can-i-find-it" class="level3">
<h3 class="anchored" data-anchor-id="im-looking-for-r.-where-can-i-find-it">I’m looking for R. Where can I find it?</h3>
<p>To install R on your personal computer, visit The R Project for Statistical Computing’s Comprehensive R Archive Network <a href="https://cran.r-project.org/">(CRAN)</a>, download the most recent version, and install it according to the website’s instructions. Once you download R, you can now experiment with some of its features.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://williamokech.netlify.app/posts/series_1/new_post_1/r_interface.png" class="img-fluid figure-img" style="width:90.0%"></p>
</figure>
</div>
<p>Figure 1: The standard R interface (Windows)</p>
<p>When you open R, you will notice that it has a basic graphical user interface (GUI), and the console displays a command-line interface (CLI; where each command is executed one at a time). This may be intimidating for new users; however, there is a workaround for those who are not comfortable working at the command line. For those who are not experienced programmers, R can be used with an application called RStudio.</p>
</section>
</section>
<section id="what-is-rstudio-and-how-does-it-differ-from-r" class="level2">
<h2 class="anchored" data-anchor-id="what-is-rstudio-and-how-does-it-differ-from-r">What is RStudio and how does it differ from R?</h2>
<p>RStudio is an integrated development environment (IDE) for R that was developed by JJ Allaire. This software contains tools that make programming in R easier. RStudio extends R’s capabilities by making it easier to import data, write scripts, and generate visualizations and reports. The RStudio IDE is available for download from the <a href="https://www.rstudio.com/products/rstudio/download/">RStudio</a> website.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://williamokech.netlify.app/posts/series_1/new_post_1/rstudio_interface.png" class="img-fluid figure-img" style="width:90.0%"></p>
</figure>
</div>
<p>Figure 2: RStudio interface with four main panes (Windows)</p>
<p>Once installed, the basic layout of RStudio reveals that there is a script (text editor), console, navigation, and environment/history window pane. The script pane (text editor) in the upper-left allows one to write, open, edit, and execute more extended programs compared with using the standalone R software. The console pane (bottom-left) displays the script’s output and offers a command-line interface for typing code that is immediately executed. The environment pane (upper-right) displays information about the created objects, the history of executed code, and any external connections. Finally, the navigation pane (bottom-right) shows multiple tabs. Its primary tabs include the “Plot” tab, which shows graphics created by code, the “Packages” tab where the packages are installed, and the “Help” tab, which provides assistance for all things R and allows one to search the R documentation.</p>
<section id="what-are-the-primary-benefits-of-rstudio" class="level3">
<h3 class="anchored" data-anchor-id="what-are-the-primary-benefits-of-rstudio">What are the primary benefits of RStudio?</h3>
<p>RStudio allows one to create projects (a collection of related files stored within a working directory). Additionally, RStudio can be customized using options available under the “Tools” tab. Lastly, RStudio has Git integration that allows for version control where you can back up your code at different timepoints and effortlessly transfer code between computers.<sup>1</sup></p>
</section>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<p>Hopefully, this was a helpful introduction to R and RStudio. In subsequent blog posts, we will focus on:</p>
<ol type="1">
<li><a href="../../../posts/series_1/new_post_2/post_2.html">Part 1: Simple arithmetic</a>,</li>
<li><a href="../../../posts/series_1/new_post_3/post_3.html">Part 2: Variables</a>,</li>
<li><a href="../../../posts/series_1/new_post_4/post_4.html">Part 3: Data types</a>,</li>
<li><a href="posts/series_1/new_post_5/post_5.html">Part 4: Operators</a>,</li>
<li><a href="posts/series_1/new_post_6/post_6.html">Part 5: Vectors</a>,</li>
<li><a href="posts/series_1/new_post_7/post_7.html">Part 6: Missing data</a></li>
<li><a href="posts/series_1/new_post_8/post_8.html">Part 7: Data Structures</a></li>
</ol>


</section>
</section>


<div id="quarto-appendix" class="default"><section class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>Summary of the benefits of R and RStudio obtained from Lander, J. P. (2014). R for everyone: Advanced analytics and graphics. Addison-Wesley.↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>RStudio</category>
  <category>R</category>
  <category>Tutorial</category>
  <category>Blog</category>
  <guid>https://williamokech.netlify.app/posts/series_1/new_post_1/post_1.html</guid>
  <pubDate>Tue, 07 Jun 2022 21:00:00 GMT</pubDate>
  <media:content url="https://williamokech.netlify.app/posts/series_1/new_post_1/r_and_rstudio.png" medium="image" type="image/png" height="26" width="144"/>
</item>
</channel>
</rss>
